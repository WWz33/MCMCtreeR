[{"path":"/articles/MCMCtree.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"MCMCtreeR","text":"examples use phylogeny apes associated age information. data phylogeny apes apeTree, minimum ages internal nodes minimumTimes, maximum ages internal nodes maximumTimes, tip labels descending node monophyleticGroups. example data can substituted data. order data must match minimumTimes, maximumTimes, monophyleticGroups objects. data need given order appear tree, order must match object. example, minimum age root first element minimumTimes must also first element minimumTimes monophyleticGroup objects. example four calibrated nodes. MCMCtree function tipDes can used recreate monophyleticGroups list object. First ape package used plot tree view node label numbers. Figure 1 Plot tree node labelled numbers calibrated nodes example 8, 10, 11, 13. function tipDes takes tree node numbers input returns taxon names descend node; output can used directly functions .","code":"if (!any(rownames(installed.packages()) == \"MCMCtreeR\")) install.packages(\"MCMCtreeR\") library(MCMCtreeR, quietly = TRUE, warn.conflicts = FALSE) ##  ## Attaching package: 'sn' ## The following object is masked from 'package:stats': ##  ##     sd data(apeData) attach(apeData) names(apeData) ## [1] \"minimumTimes\"       \"maximumTimes\"       \"monophyleticGroups\" ## [4] \"apeTree\" minimumTimes ##   nodeOne   nodeTwo nodeThree  nodeFour  ##       1.5       0.6       0.8       1.3 maximumTimes ##   nodeOne   nodeTwo nodeThree  nodeFour  ##       3.0       1.2       1.2       2.0 monophyleticGroups ## [[1]] ## [1] \"human\"      \"chimpanzee\" \"bonobo\"     \"gorilla\"    \"sumatran\"   ## [6] \"orangutan\"  \"gibbon\"     ##  ## [[2]] ## [1] \"human\"      \"chimpanzee\" \"bonobo\"     \"gorilla\"    ##  ## [[3]] ## [1] \"human\"      \"chimpanzee\" \"bonobo\"     ##  ## [[4]] ## [1] \"sumatran\"  \"orangutan\" apeTree ##  ## Phylogenetic tree with 7 tips and 6 internal nodes. ##  ## Tip labels: ##   human, chimpanzee, bonobo, gorilla, orangutan, sumatran, ... ##  ## Rooted; no branch lengths. plot(apeTree) nodelabels() tipDes(apeTree, 10) ## [1] \"gorilla\"    \"human\"      \"chimpanzee\" \"bonobo\" monophyleticGroups.user <- tipDes(apeTree, c(8, 10, 11, 13)) monophyleticGroups.user ## $`8` ## [1] \"gibbon\"     \"gorilla\"    \"orangutan\"  \"sumatran\"   \"human\"      ## [6] \"chimpanzee\" \"bonobo\"     ##  ## $`10` ## [1] \"gorilla\"    \"human\"      \"chimpanzee\" \"bonobo\"     ##  ## $`11` ## [1] \"human\"      \"chimpanzee\" \"bonobo\"     ##  ## $`13` ## [1] \"orangutan\" \"sumatran\""},{"path":"/articles/MCMCtree.html","id":"estimate-parameters-for-node-input-parameters","dir":"Articles","previous_headings":"","what":"Estimate parameters for node input parameters","title":"MCMCtreeR","text":"section includes information estimate plot prior age distributions node(s) used MCMCtree divergence time estimation. data required phylogeny, minimum maximum ages nodes prior distributions, taxa descend node (please see information make various objects). code can used simultaneously estimate parameter values reflect priori time information nodes write files ready MCMCtree input. MCMCtreeR can produce output files type distributions used summarise priori time information nodes, different distributions can used reflect uncertainty different internal nodes. functions estimates distribution parameters distribution spans user-supplied minimum bounds (lower age) maximum bounds (upper age). default, minimum ages treated ‘hard’ constraints maximum ages ‘soft’. function ensures 97.5% distribution falls minimum maximum ages. code can estimate paramaters Cauchy, Skew t, Skew-normal, Gamma distirbutions shown MCMCtree manual page 49, calibrated node priors can also placed trees uniform (bound), fixed, upper age. function, single value provided parameter user, function outputs warnings indicate values recycled node.","code":""},{"path":[]},{"path":"/articles/MCMCtree.html","id":"estimate-scale-with-a-given-shape","dir":"Articles","previous_headings":"Estimate parameters for node input parameters > Skew t","what":"estimate scale with a given shape","title":"MCMCtreeR","text":"default arguments estimateSkewT assumes user wants estimate scale distribution given shape value (default shape value 50). function estimates parameters user-supplied minimum maximum ages nodes, monophyletic groups define nodes.output skewT_results$MCMCtree shows estimated parameters input ready MCMCtree. parameters Skew t distributions location (lower node age), scale, shape, degrees freedom. explained , single value provided parameter user, function outputs warnings indicate values recycled node. function plotMCMCtree plots estimated age distributions given parameters. Figure 2 Skew t distributions nodes distributions acceptable, output can written tree file ready input MCMCtree using function estimateSkewT. functions written argument writeMCMCtree set TRUE, file set using MCMCtreeName argument. Additionally, PDF file output showing estimated distributions plot=TRUE file name can specifying using argument pdfOutput. necessary specify shape value parameter: different value shape parameter can set distribution.","code":"skewT_results <- estimateSkewT(minAge = minimumTimes, maxAge = maximumTimes,     monoGroups = monophyleticGroups, phy = apeTree, plot = FALSE) ## [1] \"warning - minProb parameter value recycled\" ## [1] \"warning - maxProb parameter value recycled\" ## [1] \"warning - estimateScale argument recycled\" ## [1] \"warning - estimateShape argument recycled\" ## [1] \"warning - estimateMode argument recycled\" ## [1] \"warning - shape parameter value recycled\" ## [1] \"warning - addMode parameter value recycled\" ## Warning in .write.tree2(phy[[i]], digits = digits, tree.prefix = tree.names[i], ## : Length of node.label does not match number of nodes. skewT_results$MCMCtree ##       ## 1 7 1 ##                                                                                                                                                          ## 1 ((((human,(chimpanzee,bonobo))'ST(0.8,0.016,50,1)',gorilla)'ST(0.6,0.024,50,1)',(orangutan,sumatran)'ST(1.3,0.028,50,1)'),gibbon)'ST(1.5,0.059,50,1)'; ##                 ## 1 //end of file par(mfrow = c(2, 2), family = \"Palatino\") for (i in 1:4) plotMCMCtree(skewT_results$parameters[i, ], method = \"skewT\",     title = paste0(\"node \", i), upperTime = max(maximumTimes)) skewT_results$MCMCtree ##       ## 1 7 1 ##                                                                                                                                                          ## 1 ((((human,(chimpanzee,bonobo))'ST(0.8,0.016,50,1)',gorilla)'ST(0.6,0.024,50,1)',(orangutan,sumatran)'ST(1.3,0.028,50,1)'),gibbon)'ST(1.5,0.059,50,1)'; ##                 ## 1 //end of file # result in tree MCMCtree format skewT_results$MCMCtree ##       ## 1 7 1 ##                                                                                                                                                          ## 1 ((((human,(chimpanzee,bonobo))'ST(0.8,0.016,50,1)',gorilla)'ST(0.6,0.024,50,1)',(orangutan,sumatran)'ST(1.3,0.028,50,1)'),gibbon)'ST(1.5,0.059,50,1)'; ##                 ## 1 //end of file ## not run skewT_results <- ## estimateSkewT(minAge=minimumTimes, maxAge=maximumTimes, ## monoGroups=monophyleticGroups, phy=apeTree, plot=FALSE, ## pdfOutput='skewTPlot.pdf', writeMCMCtree=TRUE, ## MCMCtreeName='skewTInput.tre') ## not run (remove ## to run) skewT_results <- ## estimateSkewT(minAge=minimumTimes, maxAge=maximumTimes, ## monoGroups=monophyleticGroups, shape=c(9, 10, 8, 10), ## phy=apeTree, plot=TRUE, pdfOutput='skewTPlot.pdf', ## writeMCMCtree=TRUE, MCMCtreeName='skewTInput.tre') ## skewT_results$parameters"},{"path":"/articles/MCMCtree.html","id":"estimate-shape-with-a-given-scale","dir":"Articles","previous_headings":"Estimate parameters for node input parameters > Skew t","what":"estimate shape with a given scale","title":"MCMCtreeR","text":"function estimateSkewT take input minimum input times, estimate value shape produce desired distribution scale parameter set 0.05.","code":"skewT_results <- estimateSkewT(minAge = minimumTimes[2], maxAge = maximumTimes[2],     monoGroups = monophyleticGroups, scale = 0.05, estimateShape = TRUE,     estimateScale = FALSE, phy = apeTree, plot = FALSE, writeMCMCtree = FALSE) ## Warning in .write.tree2(phy[[i]], digits = digits, tree.prefix = tree.names[i], ## : Length of node.label does not match number of nodes. skewT_results$parameters ##        location scale shape df ## node_1      0.6  0.05     1  1"},{"path":"/articles/MCMCtree.html","id":"skew-normal","dir":"Articles","previous_headings":"Estimate parameters for node input parameters","what":"Skew normal","title":"MCMCtreeR","text":"estimateSkewNormal function estimates value scale produce skew normal distribution 97.5% cumulative probability distribution maximum age. skew normal distributions can also plotted screen. Figure 3 Skew normal distributions nodes","code":"skewNormal_results <- estimateSkewNormal(minAge = minimumTimes,     maxAge = maximumTimes, monoGroups = monophyleticGroups, addMode = 0.05,     phy = apeTree, plot = FALSE) ## [1] \"warning - minProb parameter value recycled\" ## [1] \"warning - maxProb parameter value recycled\" ## [1] \"warning - estimateScale argument recycled\" ## [1] \"warning - estimateShape argument recycled\" ## [1] \"warning - estimateMode argument recycled\" ## [1] \"warning - shape parameter value recycled\" ## [1] \"warning - addMode parameter value recycled\" ## Warning in .write.tree2(phy[[i]], digits = digits, tree.prefix = tree.names[i], ## : Length of node.label does not match number of nodes. skewNormal_results$parameters ##        location scale shape ## node_1     1.55  0.65    50 ## node_2     0.65  0.25    50 ## node_3     0.85  0.16    50 ## node_4     1.35  0.29    50 par(mfrow = c(2, 2), family = \"Palatino\") for (i in 1:4) plotMCMCtree(skewNormal_results$parameters[i,     ], method = \"skewNormal\", title = paste0(\"node \", i), upperTime = max(maximumTimes))"},{"path":"/articles/MCMCtree.html","id":"cauchy","dir":"Articles","previous_headings":"Estimate parameters for node input parameters","what":"Cauchy","title":"MCMCtreeR","text":"estimateCauchy function used estimate parameters plot example page 49 PAML manual. Figure 4 Cauchy distributions nodes (given scale)","code":"example_page_50 <- estimateCauchy(minAge = 1, maxAge = 4.32,     monoGroups = monophyleticGroups[[1]], phy = apeTree, offset = 0.5,     minProb = 0.025, plot = FALSE)[[1]] ## Warning in .write.tree2(phy[[i]], digits = digits, tree.prefix = tree.names[i], ## : Length of node.label does not match number of nodes. plotMCMCtree(example_page_50, method = \"cauchy\", title = paste0(\"node \",     i), upperTime = max(maximumTimes))"},{"path":"/articles/MCMCtree.html","id":"estimate-scale-with-a-given-shape-1","dir":"Articles","previous_headings":"Estimate parameters for node input parameters > Cauchy","what":"estimate scale with a given shape","title":"MCMCtreeR","text":"estimateCauchy function take minimum input times, estimate value scale parameter produce Cauchy distribution 97.5% cumulative probability distribution user-supplied maximum age. Figure 5 Cauchy distributions nodes (given shape) plots indicate may constrained distribution much 2nd, 3rd, 4th distribution can modify allow smaller offset. Figure 6 Cauchy distributions nodes (given shape) smaller offset","code":"cauchy_results <- estimateCauchy(minAge = minimumTimes, maxAge = maximumTimes,     monoGroups = monophyleticGroups, offset = 0.5, phy = apeTree,     plot = FALSE) ## [1] \"warning - minProb parameter value recycled\" ## [1] \"warning - maxProb parameter value recycled\" ## [1] \"warning - offset parameter value recycled\" ## [1] \"warning - scale parameter value recycled\" ## [1] \"warning - estimateScale argument recycled\" ## Warning in .write.tree2(phy[[i]], digits = digits, tree.prefix = tree.names[i], ## : Length of node.label does not match number of nodes. cauchy_results$parameters ##         tL   p     c     pL ## node_1 1.5 0.5 0.075 1e-300 ## node_2 0.6 0.5 0.008 1e-300 ## node_3 0.8 0.5 0.001 1e-300 ## node_4 1.3 0.5 0.016 1e-300 par(mfrow = c(2, 2), family = \"Times\") for (i in 1:4) plotMCMCtree(cauchy_results$parameters[i, ], method = \"cauchy\",     title = paste0(\"node \", i), upperTime = max(maximumTimes)) cauchy_results <- estimateCauchy(minAge = minimumTimes, maxAge = maximumTimes,     monoGroups = monophyleticGroups, offset = c(0.5, 0.1, 0.1,         0.05), phy = apeTree, plot = FALSE) ## [1] \"warning - minProb parameter value recycled\" ## [1] \"warning - maxProb parameter value recycled\" ## [1] \"warning - scale parameter value recycled\" ## [1] \"warning - estimateScale argument recycled\" ## Warning in .write.tree2(phy[[i]], digits = digits, tree.prefix = tree.names[i], ## : Length of node.label does not match number of nodes. cauchy_results$parameters ##         tL    p     c     pL ## node_1 1.5 0.50 0.075 1e-300 ## node_2 0.6 0.10 0.035 1e-300 ## node_3 0.8 0.10 0.022 1e-300 ## node_4 1.3 0.05 0.040 1e-300 par(mfrow = c(2, 2), family = \"Times\") for (i in 1:4) plotMCMCtree(cauchy_results$parameters[i, ], method = \"cauchy\",     title = paste0(\"node \", i), upperTime = maximumTimes[i])"},{"path":"/articles/MCMCtree.html","id":"uniform-distribution","dir":"Articles","previous_headings":"Estimate parameters for node input parameters","what":"Uniform distribution","title":"MCMCtreeR","text":"Figure 7 Uniform distributions nodes","code":"uniform_results <- estimateBound(minAge = minimumTimes, maxAge = maximumTimes,     monoGroups = monophyleticGroups, phy = apeTree, plot = FALSE) ## [1] \"warning - minProb parameter value recycled\" ## [1] \"warning - maxProb parameter value recycled\" ## Warning in .write.tree2(phy[[i]], digits = digits, tree.prefix = tree.names[i], ## : Length of node.label does not match number of nodes. uniform_results$parameters ##         tL  tU    pL    pU ## node_1 1.5 3.0 0.025 0.025 ## node_2 0.6 1.2 0.025 0.025 ## node_3 0.8 1.2 0.025 0.025 ## node_4 1.3 2.0 0.025 0.025 par(mfrow = c(2, 2), family = \"Palatino\") for (i in 1:4) plotMCMCtree(uniform_results$parameters[i, ],     method = \"bound\", title = paste0(\"node \", i), upperTime = maximumTimes[i] +         1)"},{"path":"/articles/MCMCtree.html","id":"gamma-distribution","dir":"Articles","previous_headings":"Estimate parameters for node input parameters","what":"Gamma distribution","title":"MCMCtreeR","text":"Figure 8 Gamma distributions nodes","code":"gamma_results <- estimateGamma(minAge = minimumTimes, maxAge = maximumTimes,     monoGroups = monophyleticGroups, alpha = 188, beta = 2690,     offset = 0.1, phy = apeTree, plot = FALSE) ## [1] \"warning - alpha parameter value recycled\" ## [1] \"warning - beta parameter value recycled\" ## [1] \"warning - offset parameter value recycled\" ## [1] \"warning - estimateAlpha argument recycled\" ## [1] \"warning - estimateBeta argument recycled\" ## Warning in .write.tree2(phy[[i]], digits = digits, tree.prefix = tree.names[i], ## : Length of node.label does not match number of nodes. gamma_results$parameters ##        alpha beta ## node_1  4304 2690 ## node_2  1883 2690 ## node_3  2421 2690 ## node_4  3766 2690 par(mfrow = c(2, 2), family = \"Palatino\") for (i in 1:4) plotMCMCtree(gamma_results$parameters[i, ], method = \"gamma\",     title = paste0(\"node \", i), upperTime = maximumTimes[i])"},{"path":"/articles/MCMCtree.html","id":"upper-age","dir":"Articles","previous_headings":"Estimate parameters for node input parameters","what":"Upper Age","title":"MCMCtreeR","text":"","code":"upper_results <- estimateUpper(maxAge = maximumTimes, monoGroups = monophyleticGroups,     rightTail = 0.025, phy = apeTree) ## [1] \"warning - maxProb parameter value recycled\" ## Warning in .write.tree2(phy[[i]], digits = digits, tree.prefix = tree.names[i], ## : Length of node.label does not match number of nodes. upper_results$parameters ##         tU    pR ## node_1 3.0 0.025 ## node_2 1.2 0.025 ## node_3 1.2 0.025 ## node_4 2.0 0.025"},{"path":"/articles/MCMCtree.html","id":"fixed-ages","dir":"Articles","previous_headings":"Estimate parameters for node input parameters","what":"Fixed ages","title":"MCMCtreeR","text":"","code":"fixed_results <- estimateFixed(minAge = minimumTimes[1], monoGroups = monophyleticGroups[[1]],     phy = apeTree) ## Warning in .write.tree2(phy[[i]], digits = digits, tree.prefix = tree.names[i], ## : Length of node.label does not match number of nodes. fixed_results ## $parameters ## fixed age.nodeOne  ##               1.5  ##  ## $apePhy ##  ## Phylogenetic tree with 7 tips and 6 internal nodes. ##  ## Tip labels: ##   human, chimpanzee, bonobo, gorilla, orangutan, sumatran, ... ## Node labels: ##   '=1.5' ##  ## Rooted; no branch lengths. ##  ## $MCMCtree ##       ## 1 7 1 ##                                                                                                              ## 1 ((((human,(chimpanzee,bonobo)'=1.5')'=1.5',gorilla)'=1.5',(orangutan,sumatran)'=1.5')'=1.5',gibbon)'=1.5'; ##                 ## 1 //end of file ##  ## $nodeLabels ## [1] \"'=1.5'\""},{"path":"/articles/MCMCtree.html","id":"different-parameters-on-different-nodes","dir":"Articles","previous_headings":"Estimate parameters for node input parameters","what":"Different parameters on different nodes","title":"MCMCtreeR","text":"possible specify different node calibration distributions calibrated node. can specify using MCMCtreePhy function. different distributions applied internal nodes: fixed root (node 1), skew normal (node 2), gamma (node 3), upper distribution (node 4). input give associated parameter values vector order nodes. .e., minProb four nodes can set 1, 2, 4 1e-8 node 3 0.025 can fine-tuned. example, estimate alpha beta 3rd node Outputs individual methods can added input subsequent node estimation. allows easier fine-tuning. Perhaps easier explain example. , skew normal calibration applied first node. output used input estimateCauchy estimate parameters Cauchy distribution, applied second node. third node set uniform distribution. fourth skewT distribution, tree can written file input MCMCtree.","code":"each.node.method <- c(\"skewT\", \"cauchy\", \"gamma\", \"upper\") output.full <- MCMCtreePhy(phy = apeTree, minAge = minimumTimes,     maxAge = maximumTimes, monoGroups = monophyleticGroups, method = each.node.method,     writeMCMCtree = FALSE) ## Warning in .write.tree2(phy[[i]], digits = digits, tree.prefix = tree.names[i], ## : Length of node.label does not match number of nodes. ## Warning in .write.tree2(phy[[i]], digits = digits, tree.prefix = tree.names[i], ## : Length of node.label does not match number of nodes. ## Warning in .write.tree2(phy[[i]], digits = digits, tree.prefix = tree.names[i], ## : Length of node.label does not match number of nodes. ## Warning in .write.tree2(phy[[i]], digits = digits, tree.prefix = tree.names[i], ## : Length of node.label does not match number of nodes. estimate.alpha <- c(FALSE, FALSE, TRUE, FALSE) estimate.beta <- c(TRUE, TRUE, FALSE, TRUE) outputFull <- MCMCtreePhy(phy = apeTree, minAges = minimumTimes,     maxAges = maximumTimes, monoGroups = monophyleticGroups,     method = each.node.method, estimateAlpha = estimate.alpha,     estimateBeta = estimate.beta, alpha = 188, beta = 100, writeMCMCtree = FALSE) ## Warning in .write.tree2(phy[[i]], digits = digits, tree.prefix = tree.names[i], ## : Length of node.label does not match number of nodes. ## Warning in .write.tree2(phy[[i]], digits = digits, tree.prefix = tree.names[i], ## : Length of node.label does not match number of nodes. ## Warning in .write.tree2(phy[[i]], digits = digits, tree.prefix = tree.names[i], ## : Length of node.label does not match number of nodes. ## Warning in .write.tree2(phy[[i]], digits = digits, tree.prefix = tree.names[i], ## : Length of node.label does not match number of nodes. skewNormal_results_nodeOne <- estimateSkewNormal(minAge = minimumTimes[1],     maxAge = maximumTimes[1], monoGroups = monophyleticGroups[[1]],     addMode = 0.05, phy = apeTree, plot = FALSE, writeMCMCtree = FALSE) ## Warning in .write.tree2(phy[[i]], digits = digits, tree.prefix = tree.names[i], ## : Length of node.label does not match number of nodes. skewNormal_results_nodeOne$apePhy ##  ## Phylogenetic tree with 7 tips and 6 internal nodes. ##  ## Tip labels: ##   human, chimpanzee, bonobo, gorilla, orangutan, sumatran, ... ## Node labels: ##   'SN[1.55~0.65~50]' ##  ## Rooted; no branch lengths. cauchy_results_nodeTwo <- estimateCauchy(minAge = minimumTimes[2],     maxAge = maximumTimes[2], monoGroups = monophyleticGroups[[2]],     offset = 0.5, phy = skewNormal_results_nodeOne$apePhy, plot = FALSE,     writeMCMCtree = FALSE) ## Warning in .write.tree2(phy[[i]], digits = digits, tree.prefix = tree.names[i], ## : Length of node.label does not match number of nodes. cauchy_results_nodeTwo$apePhy ##  ## Phylogenetic tree with 7 tips and 6 internal nodes. ##  ## Tip labels: ##   human, chimpanzee, bonobo, gorilla, orangutan, sumatran, ... ## Node labels: ##   'SN[1.55~0.65~50]', NA, 'L[0.6~0.5~0.008~1e-300]' ##  ## Rooted; no branch lengths. uniform_results_nodeThree <- estimateBound(minAge = minimumTimes[3],     maxAge = maximumTimes[3], monoGroups = monophyleticGroups[[3]],     phy = cauchy_results_nodeTwo$apePhy, plot = FALSE, writeMCMCtree = FALSE) ## Warning in .write.tree2(phy[[i]], digits = digits, tree.prefix = tree.names[i], ## : Length of node.label does not match number of nodes. uniform_results_nodeThree$apePhy ##  ## Phylogenetic tree with 7 tips and 6 internal nodes. ##  ## Tip labels: ##   human, chimpanzee, bonobo, gorilla, orangutan, sumatran, ... ## Node labels: ##   'SN[1.55~0.65~50]', NA, 'L[0.6~0.5~0.008~1e-300]', 'B[0.8~1.2~0.025~0.025]' ##  ## Rooted; no branch lengths. ## not run skewT_results_nodeFour <- ## estimateSkewT(minAge=minimumTimes[4], ## maxAge=maximumTimes[4], ## monoGroups=monophyleticGroups[[4]], scale=0.5, ## phy=cauchy_results_nodeTwo$apePhy, plot=FALSE, ## writeMCMCtree = TRUE) skewT_results_nodeFour$apePhy"},{"path":"/articles/MCMCtree_plot.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"MCMCtreeR: plotting time trees","text":"data examples taken MCMCtree divergence time analysis. Morris et al 2018. MCMCtreeR package, users can directly call (using data function) object MCMCtree.output contains phylogeny output MCMCtree MCMCtree.phy full posterior output analysis MCMCtree.posterior.","code":"if (!any(rownames(installed.packages()) == \"MCMCtreeR\")) install.packages(\"MCMCtreeR\") library(MCMCtreeR, quietly = TRUE, warn.conflicts = FALSE) data(MCMCtree.output) attach(MCMCtree.output) names(MCMCtree.output) ## [1] \"MCMCtree.phy\"       \"MCMCtree.posterior\" phy <- readMCMCtree(MCMCtree.phy, from.file = FALSE)"},{"path":"/articles/MCMCtree_plot.html","id":"plot-geological-and-absolute-ages-on-plot","dir":"Articles","previous_headings":"","what":"Plot geological and absolute ages on plot","title":"MCMCtreeR: plotting time trees","text":"plot types, MCMC.tree.plot includes options incorporate absolute geological timescales tree figure. example, Figure 1 geologic times Eon Period displayed bottom tree, absolute ages millions years present top. plotting absolute timescales controlled setting add.time.scale option TRUE (default). absolute ages included reflect designations marked geologic time periods scale res argument. absolute ages shown Period top plot. grey.bars TRUE shading also used delimit geologic Period. Figure 1 Phylogeny posterior distributions age nodes timescale Figure 2, plot shown scale res set show geological age options (Eon, Period, Epoch, Age), looks busy tree spans > 900 million years, may better trees span smaller time frames. Figure 2 Phylogeny posterior distributions age nodes timescale showing units","code":"MCMC.tree.plot(phy, cex.tips = 0.2, time.correction = 100, scale.res = c(\"Eon\",     \"Period\"), plot.type = \"phylogram\", cex.age = 0.6, cex.labels = 0.6,     relative.height = 0.08, col.tree = \"grey40\", label.offset = 4,     node.method = \"none\", no.margin = TRUE) MCMC.tree.plot(phy, cex.tips = 0.2, time.correction = 100, scale.res = c(\"Eon\",     \"Period\", \"Epoch\", \"Age\"), plot.type = \"phylogram\", cex.age = 0.4,     cex.labels = 0.5, relative.height = 0.08, col.tree = \"grey40\",     label.offset = 4, node.method = \"none\", no.margin = TRUE)"},{"path":"/articles/MCMCtree_plot.html","id":"plot-node-uncertainty","dir":"Articles","previous_headings":"","what":"Plot node uncertainty","title":"MCMCtreeR: plotting time trees","text":"Timescaled phylogenies can plotted default ‘phylogram’ type. phylogenies uncertainty can plotted node bars, similar used FigTree. Note argument time.correction used rescale MCMCtree ages absolute time multiplying ages 100. Figure 3, uncertainty presented using bars highight upper lower Highest Posterior Density age. Figure 3 Phylogeny age uncertainty displayed bars nodes. example (Figure 4), age range uncertainty bars spread across vertical height node using option node.length. Figure 4 Phylogeny age uncertainty displayed spanning vertical height node. Finally, bars can displayed across entire vertical range plot. useful one node age particular interest, Figure 4 age uncertainty (HPD interval) node 110 (embryophytes) highlighted alone. Figure 5 Phylogeny age uncertainty one node spanning height phylogeny.","code":"MCMC.tree.plot(phy, analysis.type = \"MCMCtree\", cex.tips = 0.2,     time.correction = 100, plot.type = \"phylogram\", lwd.bar = 2,     scale.res = c(\"Eon\", \"Period\"), node.method = \"bar\", col.age = \"navy\",     no.margin = TRUE, label.offset = 4) MCMC.tree.plot(phy, analysis.type = \"MCMCtree\", cex.tips = 0.2,     time.correction = 100, plot.type = \"phylogram\", lwd.bar = 2,     scale.res = c(\"Eon\", \"Period\"), node.method = \"node.length\",     col.age = \"#008b0040\", no.margin = TRUE, label.offset = 4) MCMC.tree.plot(phy, analysis.type = \"MCMCtree\", cex.tips = 0.2,     time.correction = 100, plot.type = \"phylogram\", lwd.bar = 2,     scale.res = c(\"Eon\", \"Period\"), node.method = \"full.length\",     all.nodes = 110, col.age = \"#ff000040\", no.margin = TRUE,     label.offset = 4)"},{"path":"/articles/MCMCtree_plot.html","id":"mrbayes","dir":"Articles","previous_headings":"Plot node uncertainty","what":"Mrbayes","title":"MCMCtreeR: plotting time trees","text":"examples MCMCtree analyses, plots can also produced MrBayes trees. tree object provided full directory tree file provided directory.files argument. read plotted function.","code":"# directory.mb <- '/User/MrBayes/output.nex.con.tre' # MCMC.tree.plot(analysis.type='mrbayes', # directory.files=directory.mb, cex.tips=0.33, # plot.type='phylogram', lwd.bar=2, add.time.scale=FALSE, # node.method='bar', col.age='navy')"},{"path":"/articles/MCMCtree_plot.html","id":"revbayes","dir":"Articles","previous_headings":"Plot node uncertainty","what":"RevBayes","title":"MCMCtreeR: plotting time trees","text":"RevBayes trees can read way MrBayes trees.","code":"# directory.rb <- '/User/RevBayes/output.nex.con.tre' # MCMC.tree.plot(analysis.type='revbayes', # directory.files=directory.rb, cex.tips=0.33, # plot.type='phylogram', lwd.bar=2, add.time.scale=FALSE, # node.method='bar', col.age='navy')"},{"path":"/articles/MCMCtree_plot.html","id":"cladogram","dir":"Articles","previous_headings":"Plot node uncertainty","what":"Cladogram","title":"MCMCtreeR: plotting time trees","text":"Cladogram trees can plot output MCMCtree analysis. Figure 6, ‘MCMCtree’ node uncertainty summarised using phylogenetic cladogram plot HPD age uncertainty spans entire branch length. Figure 6 Cladogram plot","code":"MCMC.tree.plot(phy, analysis.type = \"MCMCtree\", cex.tips = 0.2,     time.correction = 100, plot.type = \"cladogram\", lwd.bar = 2,     scale.res = c(\"Eon\", \"Period\"), node.method = \"node.length\",     col.age = \"#008b0080\", no.margin = TRUE, cex.labels = 0.5)"},{"path":"/articles/MCMCtree_plot.html","id":"plot-full-distribution-on-nodes","dir":"Articles","previous_headings":"","what":"Plot full distribution on nodes","title":"MCMCtreeR: plotting time trees","text":"full posterior supplied well tree, plot.type argument can set distributions display full distribution age estimates node plot. Figure 7, full sample ages displayed every node phylogeny. Figure 7 Phylogeny posterior distributions age nodes. colour node distributions set using density.col density.border.col. nodes can given different colours. Figure 8, root node coloured red nodes blue. Figure 8 Phylogeny posterior distributions age nodes, root different colour.","code":"MCMC.tree.plot(phy, MCMC.chain = MCMCtree.posterior, cex.tips = 0.2,     time.correction = 100, plot.type = \"distributions\", cex.age = 0.4,     cex.labels = 0.5, relative.height = 0.08, col.tree = \"grey40\",     scale.res = c(\"Eon\", \"Period\"), no.margin = TRUE, label.offset = 4,     density.col = \"#00000050\", density.border.col = \"#00000080\") node.colours <- rep(\"#ff008050\", Nnode(phy$apePhy)) node.colours.border <- rep(\"#ff008090\", Nnode(phy$apePhy)) node.colours[1] <- \"#00008050\" node.colours.border[1] <- \"#00008090\" MCMC.tree.plot(phy, MCMC.chain = MCMCtree.posterior, cex.tips = 0.2,     time.correction = 100, scale.res = c(\"Eon\", \"Period\"), plot.type = \"distributions\",     cex.age = 0.4, cex.labels = 0.5, relative.height = 0.08,     col.tree = \"grey40\", col.age = \"black\", density.col = node.colours,     density.border.col = node.colours.border, grey.bars = TRUE,     no.margin = TRUE)"},{"path":"/articles/MCMCtree_plot.html","id":"plot-tree-and-timescale-from-any-software","dir":"Articles","previous_headings":"","what":"Plot tree and timescale from any software","title":"MCMCtreeR: plotting time trees","text":"Using ‘user’ option argument analysis.type possible plot trees, timescales, age uncertainty, files output software. function needs provided time-scaled phylogeny, full posterior age estimates node. user input information provided list argument node.ages. example, using MCMCtree output, process applicable divergence time software output. MCMC.tree.plot function requires object node.ages organised element contains full age posterior node, element allocated name match labels APE tree$edge object. first element list supplied node.ages root node. ‘user’ approach set-step--step. First store tree APE format new object, also create new object phy$edge object summarises tree structure APE matrix format. Finally MCMC chain stored new object. purposes examples, use subset phylogeny descends node 177. Figure 9 Phylogeny showing node tip labels. tree plot Figure 9 shows timescaled phylogeny. plot blue squares correspond internal node labels. input needs list element containing ages appropriate node (Figure 9). list constructing element name assigned corresponding node value, filled random ages normal distribution. real example subsituted real data. data can now displayed using MCMC.tree.plot function (Figure 10) node.posteriors provided function list using node.ages argument. Figure 10 Phylogeny showing node tip labels. second example use real data MCMCtree analysus. , names list elements storing posterior age arguments need match nodelabels APE tree. , good way investigate plot trees using nodelabels() function visualise nodelabels found tree. MCMCtree output file, node ages stored second column onwards. extract data remove ‘t_n’ label column header left just node numbers. sort node numbers MCMCtree analysis match node labels APE format. node.ages object input MCMC.tree.plot argument analysis.type set ‘user’ plot timescaled tree full distributions node (Figure 11). Figure 11 Phylogeny plotted user-formatted data. References Morris JL, Puttick MN, Clark JW, Edwards, Kenrick PD, Pressel S, Wellman CH, Yang Z, Schneider H, Donoghue PCJ. 2018. timescale early land plant evolution. Proceedings National Academy Sciences USA. (https://doi.org/10.1073/pnas.1719588115)","code":"data(MCMCtree.output) ## Warning in data(MCMCtree.output): data set 'MCMCtree.output' not found attach(MCMCtree.output) ## The following objects are masked from MCMCtree.output (pos = 3): ##  ##     MCMCtree.phy, MCMCtree.posterior ## The following objects are masked from MCMCtree.output (pos = 4): ##  ##     MCMCtree.phy, MCMCtree.posterior phy <- readMCMCtree(MCMCtree.phy, from.file = FALSE) phy <- phy$apePhy # Here a smaller tree is shown as an example. phy.small <- extract.clade(phy, 177) plot(phy.small, no.margin = TRUE, cex = 0.6) # view nodelabels on the tree nodelabels(cex = 1) node.numbers <- c(9, 10, 11, 12, 13, 14, 15) # create a list to store each posterior sample for every # node node.posteriors <- vector(mode = \"list\", length = Nnode(phy.small)) names(node.posteriors) <- node.numbers for (i in 1:Nnode(phy.small)) node.posteriors[[i]] <- rnorm(1000,     mean = branching.times(phy.small)[i], sd = 0.1) ## substitute the random numbers with the appropriate ## posterior distribution for that node e.g., ## your.age.values <- ## read.csv('posterior.ages.from.an.analysis') for(i in ## 1:Nnode(phy.small)) node.posteriors[[i]] <- ## your.age.values MCMC.tree.plot(phy = phy.small, node.ages = node.posteriors,     analysis.type = \"user\", cex.tips = 0.7, time.correction = 100,     scale.res = c(\"Eon\", \"Period\"), plot.type = \"distributions\",     cex.age = 0.7, cex.labels = 0.5, relative.height = 0.08,     col.tree = \"grey40\", no.margin = TRUE) # Not run. Plot tree with node labels to help work out how # labels correspond to tree from software output. # plot(ape) nodelabels() extract the MCMC chain and the # phylogeny edge object MCMC.chain <- MCMCtree.posterior phy.edge <- phy$edge # extract ages with node age posteriors from column 2 MCMC.node.ages <- MCMC.chain[, 2:Ntip(phy)] # extract the names from these data so they are numeric # node labels that match the APE tree format all.nodes <- as.numeric(gsub(\"t_n\", \"\", colnames(MCMC.node.ages))) # create a vector of names for each list element as # internal nodes from APE tree, using phy$edge object. node.ages.names <- c(Ntip(phy) + 1, phy.edge[which(phy.edge[,     2] > Ntip(phy)), 2]) # find where each posterior node age appears in APE edge # object. match.nodes <- match(all.nodes, as.numeric(node.ages.names)) # create a list extracting the information from the MCMC # chain in APE node order. node.ages <- lapply(match.nodes, function(uu) MCMC.node.ages[,     uu]) # name each element in list. names(node.ages) <- node.ages.names MCMC.tree.plot(phy = phy, node.ages = node.ages, analysis.type = \"user\",     cex.tips = 0.2, time.correction = 100, scale.res = c(\"Eon\",         \"Period\"), plot.type = \"distributions\", cex.age = 0.4,     cex.labels = 0.5, relative.height = 0.08, col.tree = \"grey40\",     no.margin = TRUE)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mark Puttick. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Puttick M (2024). MCMCtreeR: Prepare MCMCtree Analyses Plot Bayesian Divergence Time Analyses Estimates Trees. R package version 1.0.","code":"@Manual{,   title = {MCMCtreeR: Prepare MCMCtree Analyses and Plot Bayesian Divergence Time Analyses Estimates on Trees},   author = {Mark Puttick},   year = {2024},   note = {R package version 1.0}, }"},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Prepare MCMCtree Analyses and Plot Bayesian Divergence Time Analyses Estimates on Trees","title":"Prepare MCMCtree Analyses and Plot Bayesian Divergence Time Analyses Estimates on Trees","text":"examples use phylogeny apes associated age information. data phylogeny apes apeTree, minimum ages internal nodes minimumTimes, maximum ages internal nodes maximumTimes, tip labels descending node monophyleticGroups. example data can substituted data. order data must match minimumTimes, maximumTimes, monophyleticGroups objects. data need given order appear tree, order must match object. example, minimum age root first element minimumTimes must also first element minimumTimes monophyleticGroup objects. example four calibrated nodes. MCMCtree function tipDes can used recreate monophyleticGroups list object. First ape package used plot tree view node label numbers.   Figure 1 Plot tree node labelled numbers calibrated nodes example 8, 10, 11, 13. function tipDes takes tree node numbers input returns taxon names descend node; output can used directly functions .","code":"if (!any(rownames(installed.packages()) == \"MCMCtreeR\")) install.packages(\"MCMCtreeR\") library(MCMCtreeR, quietly = TRUE, warn.conflicts = FALSE) ## ## Attaching package: 'sn' ## The following object is masked from 'package:stats': ## ##     sd data(apeData) attach(apeData) names(apeData) ## [1] \"minimumTimes\"       \"maximumTimes\"       \"monophyleticGroups\" ## [4] \"apeTree\" minimumTimes ##   nodeOne   nodeTwo nodeThree  nodeFour ##       1.5       0.6       0.8       1.3 maximumTimes ##   nodeOne   nodeTwo nodeThree  nodeFour ##       3.0       1.2       1.2       2.0 monophyleticGroups ## [[1]] ## [1] \"human\"      \"chimpanzee\" \"bonobo\"     \"gorilla\"    \"sumatran\" ## [6] \"orangutan\"  \"gibbon\" ## ## [[2]] ## [1] \"human\"      \"chimpanzee\" \"bonobo\"     \"gorilla\" ## ## [[3]] ## [1] \"human\"      \"chimpanzee\" \"bonobo\" ## ## [[4]] ## [1] \"sumatran\"  \"orangutan\" apeTree ## ## Phylogenetic tree with 7 tips and 6 internal nodes. ## ## Tip labels: ##  human, chimpanzee, bonobo, gorilla, orangutan, sumatran, ... ## ## Rooted; no branch lengths. plot(apeTree) nodelabels() tipDes(apeTree, 10) ## [1] \"gorilla\"    \"human\"      \"chimpanzee\" \"bonobo\" monophyleticGroups.user <- tipDes(apeTree, c(8, 10, 11, 13)) monophyleticGroups.user ## $`8` ## [1] \"gibbon\"     \"gorilla\"    \"orangutan\"  \"sumatran\"   \"human\" ## [6] \"chimpanzee\" \"bonobo\" ## ## $`10` ## [1] \"gorilla\"    \"human\"      \"chimpanzee\" \"bonobo\" ## ## $`11` ## [1] \"human\"      \"chimpanzee\" \"bonobo\" ## ## $`13` ## [1] \"orangutan\" \"sumatran\""},{"path":"/index.html","id":"estimate-parameters-for-node-input-parameters","dir":"","previous_headings":"","what":"Estimate parameters for node input parameters","title":"Prepare MCMCtree Analyses and Plot Bayesian Divergence Time Analyses Estimates on Trees","text":"section includes information estimate plot prior age distributions node(s) used MCMCtree divergence time estimation. data required phylogeny, minimum maximum ages nodes prior distributions, taxa descend node (please see information make various objects). code can used simultaneously estimate parameter values reflect priori time information nodes write files ready MCMCtree input. MCMCtreeR can produce output files type distributions used summarise priori time information nodes, different distributions can used reflect uncertainty different internal nodes. functions estimates distribution parameters distribution spans user-supplied minimum bounds (lower age) maximum bounds (upper age). default, minimum ages treated ‘hard’ constraints maximum ages ‘soft’. function ensures 97.5% distribution falls minimum maximum ages. code can estimate paramaters Cauchy, Skew t, Skew-normal, Gamma distirbutions shown MCMCtree manual page 49, calibrated node priors can also placed trees uniform (bound), fixed, upper age. function, single value provided parameter user, function outputs warnings indicate values recycled node.","code":""},{"path":[]},{"path":"/index.html","id":"estimate-scale-with-a-given-shape","dir":"","previous_headings":"Skew t","what":"estimate scale with a given shape","title":"Prepare MCMCtree Analyses and Plot Bayesian Divergence Time Analyses Estimates on Trees","text":"default arguments estimateSkewT assumes user wants estimate scale distribution given shape value (default shape value 50). function estimates parameters user-supplied minimum maximum ages nodes, monophyletic groups define nodes.output skewT_results$MCMCtree shows estimated parameters input ready MCMCtree. parameters Skew t distributions location (lower node age), scale, shape, degrees freedom. explained , single value provided parameter user, function outputs warnings indicate values recycled node. function plotMCMCtree plots estimated age distributions given parameters.   Figure 2 Skew t distributions nodes distributions acceptable, output can written tree file ready input MCMCtree using function estimateSkewT. functions written argument writeMCMCtree set TRUE, file set using MCMCtreeName argument. Additionally, PDF file output showing estimated distributions plot=TRUE file name can specifying using argument pdfOutput. necessary specify shape value parameter: different value shape parameter can set distribution.","code":"skewT_results <- estimateSkewT(minAge = minimumTimes, maxAge = maximumTimes,     monoGroups = monophyleticGroups,phy = apeTree, plot = FALSE) skewT_results$parameters ## ## 1 7 1 ## ## 1 ((((human,(chimpanzee,bonobo))'ST(0.8,0.016,50,1)',gorilla)'ST(0.6,0.024,50,1)',(orangutan,sumatran)'ST(1.3,0.028,50,1)'),gibbon)'ST(1.5,0.059,50,1)'; ## ## 1 //end of file par(mfrow = c(2, 2), family = \"Palatino\") for (i in 1:4) plotMCMCtree(skewT_results$parameters[i, ], method = \"skewT\",     title = paste0(\"node \", i), upperTime = max(maximumTimes)) skewT_results$MCMCtree ## ## 1 7 1 ## ## 1 ((((human,(chimpanzee,bonobo))'ST(0.8,0.016,50,1)',gorilla)'ST(0.6,0.024,50,1)',(orangutan,sumatran)'ST(1.3,0.028,50,1)'),gibbon)'ST(1.5,0.059,50,1)'; ## ## 1 //end of file # result in tree MCMCtree format skewT_results$MCMCtree ## ## 1 7 1 ## ## 1 ((((human,(chimpanzee,bonobo))'ST(0.8,0.016,50,1)',gorilla)'ST(0.6,0.024,50,1)',(orangutan,sumatran)'ST(1.3,0.028,50,1)'),gibbon)'ST(1.5,0.059,50,1)'; ## ## 1 //end of file ## not run skewT_results <- estimateSkewT(minAge=minimumTimes, ## maxAge=maximumTimes, monoGroups=monophyleticGroups, ## phy=apeTree, plot=FALSE, pdfOutput='skewTPlot.pdf', ## writeMCMCtree=TRUE, MCMCtreeName='skewTInput.tre') ## not run (remove ## to run) skewT_results <- ## estimateSkewT(minAge=minimumTimes, maxAge=maximumTimes, ## monoGroups=monophyleticGroups, shape=c(9, 10, 8, 10), ## phy=apeTree, plot=TRUE, pdfOutput='skewTPlot.pdf', ## writeMCMCtree=TRUE, MCMCtreeName='skewTInput.tre') ## skewT_results$parameters"},{"path":"/index.html","id":"estimate-shape-with-a-given-scale","dir":"","previous_headings":"Skew t","what":"estimate shape with a given scale","title":"Prepare MCMCtree Analyses and Plot Bayesian Divergence Time Analyses Estimates on Trees","text":"function estimateSkewT take input minimum input times, estimate value shape produce desired distribution scale parameter set 0.05.","code":"skewT_results <- estimateSkewT(minAge = minimumTimes[2], maxAge = maximumTimes[2],     monoGroups = monophyleticGroups, scale = 0.05, estimateShape = TRUE,     estimateScale = FALSE, phy = apeTree, plot = FALSE, writeMCMCtree = FALSE) skewT_results$parameters ##        location scale shape df ## node_1      0.6  0.05     1  1"},{"path":"/index.html","id":"skew-normal","dir":"","previous_headings":"","what":"Skew normal","title":"Prepare MCMCtree Analyses and Plot Bayesian Divergence Time Analyses Estimates on Trees","text":"estimateSkewNormal function estimates value scale produce skew normal distribution 97.5% cumulative probability distribution maximum age. skew normal distributions can also plotted screen.   Figure 3 Skew normal distributions nodes","code":"skewNormal_results <- estimateSkewNormal(minAge = minimumTimes,     maxAge = maximumTimes, monoGroups = monophyleticGroups, addMode = 0.05,     phy = apeTree, plot = FALSE) ## [1] \"warning - minProb parameter value recycled\" ## [1] \"warning - maxProb parameter value recycled\" ## [1] \"warning - estimateScale argument recycled\" ## [1] \"warning - estimateShape argument recycled\" ## [1] \"warning - estimateMode argument recycled\" ## [1] \"warning - shape parameter value recycled\" ## [1] \"warning - addMode parameter value recycled\" skewNormal_results$parameters ##        location scale shape ## node_1     1.55  0.65    50 ## node_2     0.65  0.25    50 ## node_3     0.85  0.16    50 ## node_4     1.35  0.29    50 par(mfrow = c(2, 2), family = \"Palatino\") for (i in 1:4) plotMCMCtree(skewNormal_results$parameters[i,     ], method = \"skewNormal\", title = paste0(\"node \", i), upperTime = max(maximumTimes))"},{"path":"/index.html","id":"cauchy","dir":"","previous_headings":"","what":"Cauchy","title":"Prepare MCMCtree Analyses and Plot Bayesian Divergence Time Analyses Estimates on Trees","text":"estimateCauchy function used estimate parameters plot example page 49 PAML manual.   Figure 4 Cauchy distributions nodes (given scale)","code":"example_page_50 <- estimateCauchy(minAge = 1, maxAge = 4.32,     monoGroups = monophyleticGroups[[1]], phy = apeTree, offset = 0.5,     minProb = 0.025, plot = FALSE)[[1]] plotMCMCtree(example_page_50, method = \"cauchy\", title = paste0(\"node \",     i), upperTime = max(maximumTimes))"},{"path":"/index.html","id":"estimate-scale-with-a-given-shape-1","dir":"","previous_headings":"Cauchy","what":"estimate scale with a given shape","title":"Prepare MCMCtree Analyses and Plot Bayesian Divergence Time Analyses Estimates on Trees","text":"estimateCauchy function take minimum input times, estimate value scale parameter produce Cauchy distribution 97.5% cumulative probability distribution user-supplied maximum age.   Figure 5 Cauchy distributions nodes (given shape) plots indicate may constrained distribution much 2nd, 3rd, 4th distribution can modify allow smaller offset.   Figure 6 Cauchy distributions nodes (given shape) smaller offset","code":"cauchy_results <- estimateCauchy(minAge = minimumTimes, maxAge = maximumTimes,     monoGroups = monophyleticGroups, offset = 0.5, phy = apeTree,     plot = FALSE) ## [1] \"warning - minProb parameter value recycled\" ## [1] \"warning - maxProb parameter value recycled\" ## [1] \"warning - offset parameter value recycled\" ## [1] \"warning - scale parameter value recycled\" ## [1] \"warning - estimateScale argument recycled\" cauchy_results$parameters ##         tL   p     c     pL ## node_1 1.5 0.5 0.075 1e-300 ## node_2 0.6 0.5 0.008 1e-300 ## node_3 0.8 0.5 0.001 1e-300 ## node_4 1.3 0.5 0.016 1e-300 par(mfrow = c(2, 2), family = \"Times\") for (i in 1:4) plotMCMCtree(cauchy_results$parameters[i, ], method = \"cauchy\",     title = paste0(\"node \", i), upperTime = max(maximumTimes)) cauchy_results <- estimateCauchy(minAge = minimumTimes, maxAge = maximumTimes,     monoGroups = monophyleticGroups, offset = c(0.5, 0.1, 0.1,         0.05), phy = apeTree, plot = FALSE) ## [1] \"warning - minProb parameter value recycled\" ## [1] \"warning - maxProb parameter value recycled\" ## [1] \"warning - scale parameter value recycled\" ## [1] \"warning - estimateScale argument recycled\" cauchy_results$parameters ##         tL    p     c     pL ## node_1 1.5 0.50 0.075 1e-300 ## node_2 0.6 0.10 0.035 1e-300 ## node_3 0.8 0.10 0.022 1e-300 ## node_4 1.3 0.05 0.040 1e-300 par(mfrow = c(2, 2), family = \"Times\") for (i in 1:4) plotMCMCtree(cauchy_results$parameters[i, ], method = \"cauchy\",     title = paste0(\"node \", i), upperTime = maximumTimes[i])"},{"path":"/index.html","id":"uniform-distribution","dir":"","previous_headings":"","what":"Uniform distribution","title":"Prepare MCMCtree Analyses and Plot Bayesian Divergence Time Analyses Estimates on Trees","text":"Figure 7 Uniform distributions nodes","code":"uniform_results <- estimateBound(minAge = minimumTimes, maxAge = maximumTimes,     monoGroups = monophyleticGroups, phy = apeTree, plot = FALSE) ## [1] \"warning - minProb parameter value recycled\" ## [1] \"warning - maxProb parameter value recycled\" uniform_results$parameters ##         tL  tU    pL    pU ## node_1 1.5 3.0 0.025 0.025 ## node_2 0.6 1.2 0.025 0.025 ## node_3 0.8 1.2 0.025 0.025 ## node_4 1.3 2.0 0.025 0.025 par(mfrow = c(2, 2), family = \"Palatino\") for (i in 1:4) plotMCMCtree(uniform_results$parameters[i, ],     method = \"bound\", title = paste0(\"node \", i), upperTime = maximumTimes[i] +         1)"},{"path":"/index.html","id":"gamma-distribution","dir":"","previous_headings":"","what":"Gamma distribution","title":"Prepare MCMCtree Analyses and Plot Bayesian Divergence Time Analyses Estimates on Trees","text":"Figure 8 Gamma distributions nodes","code":"gamma_results <- estimateGamma(minAge = minimumTimes, maxAge = maximumTimes,     monoGroups = monophyleticGroups, alpha = 188, beta = 2690,     offset = 0.1, phy = apeTree, plot = FALSE) ## [1] \"warning - alpha parameter value recycled\" ## [1] \"warning - beta parameter value recycled\" ## [1] \"warning - offset parameter value recycled\" ## [1] \"warning - estimateAlpha argument recycled\" ## [1] \"warning - estimateBeta argument recycled\" gamma_results$parameters ##        alpha beta ## node_1  4304 2690 ## node_2  1883 2690 ## node_3  2421 2690 ## node_4  3766 2690 par(mfrow = c(2, 2), family = \"Palatino\") for (i in 1:4) plotMCMCtree(gamma_results$parameters[i, ], method = \"gamma\",     title = paste0(\"node \", i), upperTime = maximumTimes[i])"},{"path":"/index.html","id":"upper-age","dir":"","previous_headings":"","what":"Upper Age","title":"Prepare MCMCtree Analyses and Plot Bayesian Divergence Time Analyses Estimates on Trees","text":"","code":"upper_results <- estimateUpper(maxAge = maximumTimes, monoGroups = monophyleticGroups,     rightTail = 0.025, phy = apeTree) ## [1] \"warning - maxProb parameter value recycled\" upper_results$parameters ##         tU    pR ## node_1 3.0 0.025 ## node_2 1.2 0.025 ## node_3 1.2 0.025 ## node_4 2.0 0.025"},{"path":"/index.html","id":"fixed-ages","dir":"","previous_headings":"","what":"Fixed ages","title":"Prepare MCMCtree Analyses and Plot Bayesian Divergence Time Analyses Estimates on Trees","text":"","code":"fixed_results <- estimateFixed(minAge = minimumTimes[1], monoGroups = monophyleticGroups[[1]],     phy = apeTree) fixed_results ## $parameters ## fixed age.nodeOne ##               1.5 ## ## $apePhy ## ## Phylogenetic tree with 7 tips and 6 internal nodes. ## ## Tip labels: ##  human, chimpanzee, bonobo, gorilla, orangutan, sumatran, ... ## Node labels: ## [1] \"'=1.5'\" ## ## Rooted; no branch lengths. ## ## $MCMCtree ## ## 1 7 1 ## ## 1 ((((human,(chimpanzee,bonobo)),gorilla),(orangutan,sumatran)),gibbon)'=1.5'; ## ## 1 //end of file ## ## $nodeLabels ## [1] \"'=1.5'\""},{"path":"/index.html","id":"different-parameters-on-different-nodes","dir":"","previous_headings":"","what":"Different parameters on different nodes","title":"Prepare MCMCtree Analyses and Plot Bayesian Divergence Time Analyses Estimates on Trees","text":"possible specify different node calibration distributions calibrated node. can specify using MCMCtreePhy function. different distributions applied internal nodes: fixed root (node 1), skew normal (node 2), gamma (node 3), upper distribution (node 4). input give associated parameter values vector order nodes. .e., minProb four nodes can set 1, 2, 4 1e-8 node 3 0.025 can fine-tuned. example, estimate alpha beta 3rd node Outputs individual methods can added input subsequent node estimation. allows easier fine-tuning. Perhaps easier explain example. , skew normal calibration applied first node. output used input estimateCauchy estimate parameters Cauchy distribution, applied second node. third node set uniform distribution. fourth skewT distribution, tree can written file input MCMCtree.","code":"each.node.method <- c(\"skewT\", \"cauchy\", \"gamma\", \"upper\") output.full <- MCMCtreePhy(phy = apeTree, minAge = minimumTimes,     maxAge = maximumTimes, monoGroups = monophyleticGroups, method = each.node.method,     writeMCMCtree = FALSE) estimate.alpha <- c(FALSE, FALSE, TRUE, FALSE) estimate.beta <- c(TRUE, TRUE, FALSE, TRUE) outputFull <- MCMCtreePhy(phy = apeTree, minAges = minimumTimes,     maxAges = maximumTimes, monoGroups = monophyleticGroups,     method = each.node.method, estimateAlpha = estimate.alpha,     estimateBeta = estimate.beta, alpha = 188, beta = 100, writeMCMCtree = FALSE) skewNormal_results_nodeOne <- estimateSkewNormal(minAge = minimumTimes[1],     maxAge = maximumTimes[1], monoGroups = monophyleticGroups[[1]],     addMode = 0.05, phy = apeTree, plot = FALSE, writeMCMCtree = FALSE) skewNormal_results_nodeOne$apePhy ## ## Phylogenetic tree with 7 tips and 6 internal nodes. ## ## Tip labels: ##  human, chimpanzee, bonobo, gorilla, orangutan, sumatran, ... ## Node labels: ## [1] \"'SN[1.55~0.65~50]'\" ## ## Rooted; no branch lengths. cauchy_results_nodeTwo <- estimateCauchy(minAge = minimumTimes[2],     maxAge = maximumTimes[2], monoGroups = monophyleticGroups[[2]],     offset = 0.5, phy = skewNormal_results_nodeOne$apePhy, plot = FALSE,     writeMCMCtree = FALSE) cauchy_results_nodeTwo$apePhy ## ## Phylogenetic tree with 7 tips and 6 internal nodes. ## ## Tip labels: ##  human, chimpanzee, bonobo, gorilla, orangutan, sumatran, ... ## Node labels: ## [1] \"'SN[1.55~0.65~50]'\"        NA ## [3] \"'L[0.6~0.5~0.008~1e-300]'\" ## ## Rooted; no branch lengths. uniform_results_nodeThree <- estimateBound(minAge = minimumTimes[3],     maxAge = maximumTimes[3], monoGroups = monophyleticGroups[[3]],     phy = cauchy_results_nodeTwo$apePhy, plot = FALSE, writeMCMCtree = FALSE) uniform_results_nodeThree$apePhy ## ## Phylogenetic tree with 7 tips and 6 internal nodes. ## ## Tip labels: ##  human, chimpanzee, bonobo, gorilla, orangutan, sumatran, ... ## Node labels: ## [1] \"'SN[1.55~0.65~50]'\"        NA ## [3] \"'L[0.6~0.5~0.008~1e-300]'\" \"'B[0.8~1.2~0.025~0.025]'\" ## ## Rooted; no branch lengths. ## not run skewT_results_nodeFour <- ## estimateSkewT(minAge=minimumTimes[4], ## maxAge=maximumTimes[4], monoGroups=monophyleticGroups[[4]], ## scale=0.5, phy=cauchy_results_nodeTwo$apePhy, plot=FALSE, ## writeMCMCtree = TRUE) skewT_results_nodeFour$apePhy"},{"path":"/reference/apeData.html","id":null,"dir":"Reference","previous_headings":"","what":"ApeData Ape phylogeny in ape format, monophyletic clades, and maximum and minimum ages — apeData","title":"ApeData Ape phylogeny in ape format, monophyletic clades, and maximum and minimum ages — apeData","text":"ApeData Ape phylogeny ape format, monophyletic clades, maximum minimum ages","code":""},{"path":"/reference/apeData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ApeData Ape phylogeny in ape format, monophyletic clades, and maximum and minimum ages — apeData","text":"","code":"data(apeData)"},{"path":"/reference/apeData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ApeData Ape phylogeny in ape format, monophyletic clades, and maximum and minimum ages — apeData","text":"object class list length 4.","code":""},{"path":"/reference/apeData.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"ApeData Ape phylogeny in ape format, monophyletic clades, and maximum and minimum ages — apeData","text":"Yang 2014","code":""},{"path":"/reference/apeData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ApeData Ape phylogeny in ape format, monophyletic clades, and maximum and minimum ages — apeData","text":"","code":"data(apeData) attach(apeData) names(apeData) #> [1] \"minimumTimes\"       \"maximumTimes\"       \"monophyleticGroups\" #> [4] \"apeTree\""},{"path":"/reference/estimateBound.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate a Uniform Distribution for MCMCtree — estimateBound","title":"Estimate a Uniform Distribution for MCMCtree — estimateBound","text":"Estimate paramaters soft-bounded uniform distribution output trees MCMCtree input","code":""},{"path":"/reference/estimateBound.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate a Uniform Distribution for MCMCtree — estimateBound","text":"","code":"estimateBound(   minAge,   maxAge,   minProb = 0.025,   rightTail = 0.025,   phy,   monoGroups,   writeMCMCtree = FALSE,   plot = TRUE,   MCMCtreeName = \"bound.tre\",   pdfOutput = \"uniformPlot.pdf\" )"},{"path":"/reference/estimateBound.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate a Uniform Distribution for MCMCtree — estimateBound","text":"minAge vector minimum age bounds nodes matching order monoGroups maxAge vector maximum age bounds nodes matching order monoGroups minProb probability left tail (minimum bound) - default hard minimum (minProb=0) rightTail probability right tail (maximum bound default = 0.975) phy fully resolved phylogeny ape format monoGroups list  element containing species define node interest writeMCMCtree logical whether write tree format compatible MCMCTree file plot logical specifying whether plot PDF MCMCtreeName MCMCtree.output file name pdfOutput pdf output file name","code":""},{"path":"/reference/estimateBound.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate a Uniform Distribution for MCMCtree — estimateBound","text":"list containing node estimates distribution \"parameters\" estimated parameters node \"apePhy\" phylogeny ape format node labels showing node distributions \"MCMCtree\" phylogeny MCMCtreeR format \"nodeLabels\" node labels MCMCtreeR format plot=TRUE plot distributions file 'pdfOutput' written current working directory writeMCMCtree=TRUE tree MCMCtree format file \"MCMCtreeName\" written current working directory","code":""},{"path":"/reference/estimateBound.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimate a Uniform Distribution for MCMCtree — estimateBound","text":"Mark Puttick","code":""},{"path":"/reference/estimateBound.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate a Uniform Distribution for MCMCtree — estimateBound","text":"","code":"data(apeData) attach(apeData) #> The following objects are masked from apeData (pos = 3): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups ## extract taxon descending from calibrated nodes 8, 10, 11, 13 ## these nodes can be visualised using plot.phylo ## and nodelabels from ape monophyleticGroups <- tipDes(apeData$apeTree, c(8,10,11,13)) minimumTimes <- c(\"nodeOne\"=15, \"nodeTwo\"=6, \"nodeThree\"=8, \"nodeFour\"=13) / 10 maximumTimes <- c(\"nodeOne\" = 30, \"nodeTwo\" = 12, \"nodeThree\"=12, \"nodeFour\" = 20) / 10 estimateBound(minAge=minimumTimes, maxAge=maximumTimes,  monoGroups=monophyleticGroups, phy=apeTree, plot=FALSE)$MCMCtree #> [1] \"warning - minProb parameter value recycled\" #> [1] \"warning - maxProb parameter value recycled\" #> Warning: Length of node.label does not match number of nodes. #>       #> 1 7 1 #>                                                                                                                                                                      #> 1 ((((human,(chimpanzee,bonobo))'B(0.8,1.2,0.025,0.025)',gorilla)'B(0.6,1.2,0.025,0.025)',(orangutan,sumatran)'B(1.3,2,0.025,0.025)'),gibbon)'B(1.5,3,0.025,0.025)'; #>                 #> 1 //end of file"},{"path":"/reference/estimateCauchy.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Cauchy Distribution for MCMCtree — estimateCauchy","title":"Estimate Cauchy Distribution for MCMCtree — estimateCauchy","text":"Estimate offset scale paramaters soft-tailed cauchy distribution output trees MCMCtree input","code":""},{"path":"/reference/estimateCauchy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Cauchy Distribution for MCMCtree — estimateCauchy","text":"","code":"estimateCauchy(   minAge,   maxAge,   phy,   monoGroups,   scale = 1.5,   offset = 50,   estimateScale = TRUE,   minProb = 0,   maxProb = 0.975,   plot = FALSE,   pdfOutput = \"cauchyPlot.pdf\",   writeMCMCtree = FALSE,   MCMCtreeName = \"cauchyInput.tre\" )"},{"path":"/reference/estimateCauchy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Cauchy Distribution for MCMCtree — estimateCauchy","text":"minAge vector minimum age bounds nodes matching order monoGroups maxAge vector maximum age bounds nodes matching order monoGroups phy fully resolved phylogeny ape format monoGroups list  element containing species define node interest scale scale value cauchy distribution (default = 1.5) (c PAML manual page 49) offset offset value cauchy distribution (default = 50) (p PAML manual page 49) estimateScale logical specifying whether estimate scale given shape value (default = TRUE) minProb probability left tail (minimum bound) - default hard minimum (minProb=0) maxProb probability right tail (maximum bound. default = 0.975) plot logical specifying whether plot PDF pdfOutput pdf output file name writeMCMCtree logical whether write tree format compatible MCMCTree file MCMCtreeName MCMCtree.output file name","code":""},{"path":"/reference/estimateCauchy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Cauchy Distribution for MCMCtree — estimateCauchy","text":"list containing node estimates distribution \"parameters\" estimated parameters node \"apePhy\" phylogeny ape format node labels showing node distributions \"MCMCtree\" phylogeny MCMCtree format \"nodeLabels\" node labels MCMCtreeR format plot=TRUE plot distributions file 'pdfOutput' written current working directory writeMCMCtree=TRUE tree MCMCtree format file \"MCMCtreeName\" written current working directory","code":""},{"path":"/reference/estimateCauchy.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimate Cauchy Distribution for MCMCtree — estimateCauchy","text":"Mark Puttick data(apeData) attach(apeData) ## extract taxon descending calibrated nodes 8, 10, 11, 13 ## nodes can visualised using plot.phylo ## nodelabels ape monophyleticGroups <- tipDes(apeData$apeTree, c(8,10,11,13)) minimumTimes <- c(\"nodeOne\"=15, \"nodeTwo\"=6, \"nodeThree\"=8, \"nodeFour\"=13) / 10 maximumTimes <- c(\"nodeOne\" = 30, \"nodeTwo\" = 12, \"nodeThree\"=12, \"nodeFour\" = 20) / 10 estimateCauchy(minAge=minimumTimes, maxAge=maximumTimes, monoGroups=monophyleticGroups, offset=0.5, phy=apeTree, plot=FALSE)$MCMCtree","code":""},{"path":"/reference/estimateFixed.html","id":null,"dir":"Reference","previous_headings":"","what":"Fixed Age for MCMCtree analysis input — estimateFixed","title":"Fixed Age for MCMCtree analysis input — estimateFixed","text":"Produce fixed age trees MCMCtree analysis","code":""},{"path":"/reference/estimateFixed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fixed Age for MCMCtree analysis input — estimateFixed","text":"","code":"estimateFixed(   minAge,   phy,   monoGroups,   writeMCMCtree = FALSE,   MCMCtreeName = \"estimateFixed.tre\" )"},{"path":"/reference/estimateFixed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fixed Age for MCMCtree analysis input — estimateFixed","text":"minAge vector fixed age bounds nodes matching order monoGroups phy fully resolved phylogeny ape format monoGroups list  element containing species define node interest writeMCMCtree logical whether write tree format compatible MCMCTree file MCMCtreeName MCMCtree.output file name","code":""},{"path":"/reference/estimateFixed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fixed Age for MCMCtree analysis input — estimateFixed","text":"list containing node estimates distribution \"parameters\" estimated parameters node \"apePhy\" phylogeny ape format node labels showing node distributions \"MCMCtree\" phylogeny MCMCtreeR format \"nodeLabels\" node labels MCMCtreeR format writeMCMCtree=TRUE tree MCMCtree format file \"MCMCtreeName\" written current working directory","code":""},{"path":"/reference/estimateFixed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fixed Age for MCMCtree analysis input — estimateFixed","text":"Mark Puttick","code":""},{"path":"/reference/estimateFixed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fixed Age for MCMCtree analysis input — estimateFixed","text":"","code":"data(apeData) attach(apeData) #> The following objects are masked from apeData (pos = 3): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups #> The following objects are masked from apeData (pos = 4): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups ## extract taxon descending from calibrated nodes 8, 10, 11, 13 ## these nodes can be visualised using plot.phylo ## and nodelabels from ape monophyleticGroups <- tipDes(apeData$apeTree, c(8,10,11,13)) minimumTimes <- c(\"nodeOne\"=15, \"nodeTwo\"=6, \"nodeThree\"=8, \"nodeFour\"=13) / 10 maximumTimes <- c(\"nodeOne\" = 30, \"nodeTwo\" = 12, \"nodeThree\"=12, \"nodeFour\" = 20) / 10 estimateFixed(minAge=minimumTimes[1], monoGroups=monophyleticGroups[[1]], phy=apeTree)$MCMCtree #> Warning: Length of node.label does not match number of nodes. #>       #> 1 7 1 #>                                                                                                              #> 1 ((((human,(chimpanzee,bonobo)'=1.5')'=1.5',gorilla)'=1.5',(orangutan,sumatran)'=1.5')'=1.5',gibbon)'=1.5'; #>                 #> 1 //end of file"},{"path":"/reference/estimateGamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Gamma Distribution for MCMCtree analysis — estimateGamma","title":"Estimate Gamma Distribution for MCMCtree analysis — estimateGamma","text":"Estimate shape rate paramaters Gamma distribution output trees MCMCtree input","code":""},{"path":"/reference/estimateGamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Gamma Distribution for MCMCtree analysis — estimateGamma","text":"","code":"estimateGamma(   minAge,   maxAge,   phy,   monoGroups,   alpha = 188,   beta = 2690,   offset = 0.1,   estimateAlpha = TRUE,   estimateBeta = FALSE,   plot = FALSE,   pdfOutput = \"gammaPlot.pdf\",   writeMCMCtree = FALSE,   MCMCtreeName = \"gammaInput.tre\" )"},{"path":"/reference/estimateGamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Gamma Distribution for MCMCtree analysis — estimateGamma","text":"minAge vector minimum age bounds nodes matching order monoGroups maxAge vector maximum age bounds nodes matching order monoGroups phy fully resolved phylogeny ape format monoGroups list  element containing species define node interest alpha alpha value gamma distribution (default = 188) beta beta value gamma distribution (default = 2690) offset distance mean value minimum bound estimateAlpha logical specifying whether estimate alpha given beta value (default = TRUE) estimateBeta logical specifying whether estimate beta given alpha value (default = FALSE) plot logical specifying whether plot PDF pdfOutput pdf output file name writeMCMCtree logical whether write tree format compatible MCMCTree file MCMCtreeName MCMCtree.output file name","code":""},{"path":"/reference/estimateGamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Gamma Distribution for MCMCtree analysis — estimateGamma","text":"list containing node estimates distribution \"parameters\" estimated parameters node \"apePhy\" phylogeny APE format node labels showing node distributions \"MCMCtree\" phylogeny MCMCtreeR format \"nodeLabels\" node labels MCMCtreeR format plot=TRUE plot distributions file 'pdfOutput' written current working directory writeMCMCtree=TRUE tree MCMCtree format file \"MCMCtreeName\" written current working directory","code":""},{"path":"/reference/estimateGamma.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimate Gamma Distribution for MCMCtree analysis — estimateGamma","text":"Mark Puttick","code":""},{"path":"/reference/estimateGamma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Gamma Distribution for MCMCtree analysis — estimateGamma","text":"","code":"data(apeData) attach(apeData) #> The following objects are masked from apeData (pos = 3): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups #> The following objects are masked from apeData (pos = 4): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups #> The following objects are masked from apeData (pos = 5): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups ## extract taxon descending from calibrated nodes 8, 10, 11, 13 ## these nodes can be visualised using plot.phylo ## and nodelabels from ape monophyleticGroups <- tipDes(apeData$apeTree, c(8,10,11,13)) minimumTimes <- c(\"8\"=15, \"10\"=6, \"11\"=8, \"13\"=13) / 10 maximumTimes <- c(\"8\" = 30, \"10\" = 12, \"11\"=12, \"13\" = 20) / 10 gamma.nodes <- estimateGamma(minAge=minimumTimes, maxAge=maximumTimes,  monoGroups=monophyleticGroups, alpha=188, beta=2690,  offset=0.1, phy=apeTree, plot=FALSE) #> [1] \"warning - alpha parameter value recycled\" #> [1] \"warning - beta parameter value recycled\" #> [1] \"warning - offset parameter value recycled\" #> [1] \"warning - estimateAlpha argument recycled\" #> [1] \"warning - estimateBeta argument recycled\" #> Warning: Length of node.label does not match number of nodes. gamma.nodes #> $parameters #>        alpha beta #> node_1  4304 2690 #> node_2  1883 2690 #> node_3  2421 2690 #> node_4  3766 2690 #>  #> $apePhy #>  #> Phylogenetic tree with 7 tips and 6 internal nodes. #>  #> Tip labels: #>   human, chimpanzee, bonobo, gorilla, orangutan, sumatran, ... #> Node labels: #>   'G[4304~2690]', NA, 'G[1883~2690]', 'G[2421~2690]', NA, 'G[3766~2690]' #>  #> Rooted; no branch lengths. #>  #> $MCMCtree #>       #> 1 7 1 #>                                                                                                                                  #> 1 ((((human,(chimpanzee,bonobo))'G(2421,2690)',gorilla)'G(1883,2690)',(orangutan,sumatran)'G(3766,2690)'),gibbon)'G(4304,2690)'; #>                 #> 1 //end of file #>  #> $nodeLabels #> [1] \"'G[4304~2690]'\" \"'G[1883~2690]'\" \"'G[2421~2690]'\" \"'G[3766~2690]'\" #>"},{"path":"/reference/estimateSkewNormal.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Skew Normal for MCMCtree analysis — estimateSkewNormal","title":"Estimate Skew Normal for MCMCtree analysis — estimateSkewNormal","text":"Estimate shape, scale, location paramaters skew normal distribution output trees MCMCtree input","code":""},{"path":"/reference/estimateSkewNormal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Skew Normal for MCMCtree analysis — estimateSkewNormal","text":"","code":"estimateSkewNormal(   minAge,   maxAge,   monoGroups,   phy,   shape = 50,   scale = 1.5,   addMode = 0,   maxProb = 0.975,   minProb = 0.003,   estimateScale = TRUE,   estimateShape = FALSE,   estimateMode = FALSE,   plot = FALSE,   pdfOutput = \"skewNormalPlot.pdf\",   writeMCMCtree = FALSE,   MCMCtreeName = \"skewNormalInput.tre\" )"},{"path":"/reference/estimateSkewNormal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Skew Normal for MCMCtree analysis — estimateSkewNormal","text":"minAge vector minimum age bounds nodes matching order monoGroups maxAge vector maximum age bounds nodes matching order monoGroups monoGroups list  element containing species define node interest phy fully resolved phylogeny ape format shape shape value skew normal distribution (default = 50) scale scale value skew normal distribution (default = 1.5) addMode addition minimum age give location distribution maxProb probability right tail (maximum bound default = 0.975) minProb probability left tail (maximum bound default = 0.003) estimateScale logical specifying whether estimate scale given shape value (default = TRUE) estimateShape logical specifying whether estimate shape given scale value (default = FALSE) estimateMode logical speciftying whether estimate scale produces probabilities tail corresponds roughly values given minProb (lower tail) maxProb (upper tail) plot logical specifying whether plot PDF pdfOutput pdf output file name writeMCMCtree logical whether write tree format compatible MCMCTree file MCMCtreeName MCMCtree.output file name","code":""},{"path":"/reference/estimateSkewNormal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Skew Normal for MCMCtree analysis — estimateSkewNormal","text":"list containing node estimates distribution \"parameters\" estimated parameters node \"apePhy\" phylogeny ape format node labels showing node distributions \"MCMCtree\" phylogeny MCMCtree format \"nodeLabels\" node labels MCMCtreeR format plot=TRUE plot distributions file 'pdfOutput' written current working directory writeMCMCtree=TRUE tree MCMCtree format file \"MCMCtreeName\" written current working directory","code":""},{"path":[]},{"path":"/reference/estimateSkewNormal.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimate Skew Normal for MCMCtree analysis — estimateSkewNormal","text":"Mark Puttick","code":""},{"path":"/reference/estimateSkewNormal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Skew Normal for MCMCtree analysis — estimateSkewNormal","text":"","code":"data(apeData) attach(apeData) #> The following objects are masked from apeData (pos = 3): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups #> The following objects are masked from apeData (pos = 4): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups #> The following objects are masked from apeData (pos = 5): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups #> The following objects are masked from apeData (pos = 6): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups monophyleticGroups <- list() ## extract taxon descending from calibrated nodes 8, 10, 11, 13 ## these nodes can be visualised using plot.phylo ## and nodelabels from ape monophyleticGroups <- tipDes(apeData$apeTree, c(8,10,11,13)) minimumTimes <- c(\"nodeOne\"=15, \"nodeTwo\"=6, \"nodeThree\"=8, \"nodeFour\"=13) / 10 maximumTimes <- c(\"nodeOne\" = 30, \"nodeTwo\" = 12, \"nodeThree\"=12, \"nodeFour\" = 20) / 10 estimateSkewNormal(minAge=minimumTimes, maxAge=maximumTimes,  monoGroups=monophyleticGroups, phy=apeTree, plot=FALSE) #> [1] \"warning - minProb parameter value recycled\" #> [1] \"warning - maxProb parameter value recycled\" #> [1] \"warning - estimateScale argument recycled\" #> [1] \"warning - estimateShape argument recycled\" #> [1] \"warning - estimateMode argument recycled\" #> [1] \"warning - shape parameter value recycled\" #> [1] \"warning - addMode parameter value recycled\" #> Warning: Length of node.label does not match number of nodes. #> $parameters #>        location scale shape #> node_1      1.5  0.67    50 #> node_2      0.6  0.27    50 #> node_3      0.8  0.18    50 #> node_4      1.3  0.31    50 #>  #> $apePhy #>  #> Phylogenetic tree with 7 tips and 6 internal nodes. #>  #> Tip labels: #>   human, chimpanzee, bonobo, gorilla, orangutan, sumatran, ... #> Node labels: #>   'SN[1.5~0.67~50]', NA, 'SN[0.6~0.27~50]', 'SN[0.8~0.18~50]', NA, 'SN[1.3~0.31~50]' #>  #> Rooted; no branch lengths. #>  #> $MCMCtree #>       #> 1 7 1 #>                                                                                                                                              #> 1 ((((human,(chimpanzee,bonobo))'SN(0.8,0.18,50)',gorilla)'SN(0.6,0.27,50)',(orangutan,sumatran)'SN(1.3,0.31,50)'),gibbon)'SN(1.5,0.67,50)'; #>                 #> 1 //end of file #>  #> $nodeLabels #> [1] \"'SN[1.5~0.67~50]'\" \"'SN[0.6~0.27~50]'\" \"'SN[0.8~0.18~50]'\" #> [4] \"'SN[1.3~0.31~50]'\" #>"},{"path":"/reference/estimateSkewT.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Skew-t Distribution for MCMCtree analysis — estimateSkewT","title":"Estimate Skew-t Distribution for MCMCtree analysis — estimateSkewT","text":"Estimate shape, scale, location paramaters Skew-t distribution output trees MCMCtree input","code":""},{"path":"/reference/estimateSkewT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Skew-t Distribution for MCMCtree analysis — estimateSkewT","text":"","code":"estimateSkewT(   minAge,   maxAge,   monoGroups,   phy,   shape = 50,   scale = 1.5,   df = 1,   addMode = 0,   maxProb = 0.975,   minProb = 0.003,   estimateScale = TRUE,   estimateShape = FALSE,   estimateMode = FALSE,   plot = FALSE,   pdfOutput = \"skewTPlot.pdf\",   writeMCMCtree = FALSE,   MCMCtreeName = \"skewTInput.tre\" )"},{"path":"/reference/estimateSkewT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Skew-t Distribution for MCMCtree analysis — estimateSkewT","text":"minAge vector minimum age bounds nodes matching order monoGroups maxAge vector maximum age bounds nodes matching order monoGroups monoGroups list  element containing species define node interest phy fully resolved phylogeny ape format shape shape value skew-t distribution (default = 50) scale scale value skew-t distribution (default = 1.5) df degrees freedom skew-t distribution (default = 1) addMode addition minimum age give location distribution maxProb probability right tail (maximum bound default = 0.975) minProb probability left tail (maximum bound default = 0.003) estimateScale logical specifying whether estimate scale given shape value (default = TRUE) estimateShape logical specifying whether estimate shape given scale value (default = FALSE) estimateMode logical speciftying whether estimate scale produces probabilities tail corresponds roughly values given minProb (lower tail) maxProb (upper tail) plot logical specifying whether plot PDF pdfOutput pdf output file name writeMCMCtree logical whether write tree format compatible MCMCTree file MCMCtreeName MCMCtree.output file name","code":""},{"path":"/reference/estimateSkewT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Skew-t Distribution for MCMCtree analysis — estimateSkewT","text":"list containing node estimates distribution \"parameters\" estimated parameters node \"apePhy\" phylogeny APE format node labels showing node distributions \"MCMCtree\" phylogeny MCMCtree format \"nodeLabels\" node labels MCMCtreeR format plot=TRUE plot distributions file 'pdfOutput' written current working directory writeMCMCtree=TRUE tree MCMCtree format file \"MCMCtreeName\" written current working directory","code":""},{"path":[]},{"path":"/reference/estimateSkewT.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimate Skew-t Distribution for MCMCtree analysis — estimateSkewT","text":"Mark Puttick","code":""},{"path":"/reference/estimateSkewT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Skew-t Distribution for MCMCtree analysis — estimateSkewT","text":"","code":"data(apeData) attach(apeData) #> The following objects are masked from apeData (pos = 3): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups #> The following objects are masked from apeData (pos = 4): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups #> The following objects are masked from apeData (pos = 5): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups #> The following objects are masked from apeData (pos = 6): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups #> The following objects are masked from apeData (pos = 7): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups ## extract taxon descending from calibrated nodes 8, 10, 11, 13 ## these nodes can be visualised using plot.phylo ## and nodelabels from ape monophyleticGroups <- tipDes(apeData$apeTree, c(8,10,11,13)) minimumTimes <- c(\"nodeOne\"=15, \"nodeTwo\"=6, \"nodeThree\"=8, \"nodeFour\"=13) / 10 maximumTimes <- c(\"nodeOne\" = 30, \"nodeTwo\" = 12, \"nodeThree\"=12, \"nodeFour\" = 20) / 10 estimateSkewT(minAge=minimumTimes, maxAge=maximumTimes, monoGroups=monophyleticGroups, phy=apeTree, plot=FALSE)$MCMCtree #> [1] \"warning - minProb parameter value recycled\" #> [1] \"warning - maxProb parameter value recycled\" #> [1] \"warning - estimateScale argument recycled\" #> [1] \"warning - estimateShape argument recycled\" #> [1] \"warning - estimateMode argument recycled\" #> [1] \"warning - shape parameter value recycled\" #> [1] \"warning - addMode parameter value recycled\" #> Warning: Length of node.label does not match number of nodes. #>       #> 1 7 1 #>                                                                                                                                                          #> 1 ((((human,(chimpanzee,bonobo))'ST(0.8,0.016,50,1)',gorilla)'ST(0.6,0.024,50,1)',(orangutan,sumatran)'ST(1.3,0.028,50,1)'),gibbon)'ST(1.5,0.059,50,1)'; #>                 #> 1 //end of file"},{"path":"/reference/estimateUpper.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Upper Age for MCMCtree analysis — estimateUpper","title":"Estimate Upper Age for MCMCtree analysis — estimateUpper","text":"Estimate upper age distribution output trees MCMCtree input","code":""},{"path":"/reference/estimateUpper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Upper Age for MCMCtree analysis — estimateUpper","text":"","code":"estimateUpper(   maxAge,   rightTail = 0.025,   phy,   monoGroups,   writeMCMCtree = FALSE,   MCMCtreeName = \"estimateUpper.tre\" )"},{"path":"/reference/estimateUpper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Upper Age for MCMCtree analysis — estimateUpper","text":"maxAge vector maximum age bounds nodes matching order monoGroups rightTail probability right tail (maximum bound default = 0.025) phy fully resolved phylogeny ape format monoGroups list  element containing species define node interest writeMCMCtree logical whether write tree format compatible MCMCTree file MCMCtreeName MCMCtree.output file name","code":""},{"path":"/reference/estimateUpper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Upper Age for MCMCtree analysis — estimateUpper","text":"list containing node estimates distribution \"parameters\" estimated parameters node \"apePhy\" phylogeny APE format node labels showing node distributions \"MCMCtree\" phylogeny MCMCtree format \"nodeLabels\" node labels MCMCtreeR format plot=TRUE plot distributions file 'pdfOutput' written current working directory writeMCMCtree=TRUE tree MCMCtree format file \"MCMCtreeName\" written current working directory","code":""},{"path":"/reference/estimateUpper.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimate Upper Age for MCMCtree analysis — estimateUpper","text":"Mark Puttick","code":""},{"path":"/reference/estimateUpper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Upper Age for MCMCtree analysis — estimateUpper","text":"","code":"data(apeData) attach(apeData) #> The following objects are masked from apeData (pos = 3): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups #> The following objects are masked from apeData (pos = 4): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups #> The following objects are masked from apeData (pos = 5): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups #> The following objects are masked from apeData (pos = 6): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups #> The following objects are masked from apeData (pos = 7): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups #> The following objects are masked from apeData (pos = 8): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups ## extract taxon descending from calibrated nodes 8, 10, 11, 13 ## these nodes can be visualised using plot.phylo ## and nodelabels from ape monophyleticGroups <- tipDes(apeData$apeTree, c(8,10,11,13)) minimumTimes <- c(\"nodeOne\"=15, \"nodeTwo\"=6, \"nodeThree\"=8, \"nodeFour\"=13) / 10 maximumTimes <- c(\"nodeOne\" = 30, \"nodeTwo\" = 12, \"nodeThree\"=12, \"nodeFour\" = 20) / 10 estimateUpper(maxAge=maximumTimes, monoGroups=monophyleticGroups, rightTail=0.025, phy=apeTree) #> [1] \"warning - maxProb parameter value recycled\" #> Warning: Length of node.label does not match number of nodes. #> $apePhy #>  #> Phylogenetic tree with 7 tips and 6 internal nodes. #>  #> Tip labels: #>   human, chimpanzee, bonobo, gorilla, orangutan, sumatran, ... #> Node labels: #>   'U[3~0.025]', NA, 'U[1.2~0.025]', 'U[1.2~0.025]', NA, 'U[2~0.025]' #>  #> Rooted; no branch lengths. #>  #> $MCMCtree #>       #> 1 7 1 #>                                                                                                                              #> 1 ((((human,(chimpanzee,bonobo))'U(1.2,0.025)',gorilla)'U(1.2,0.025)',(orangutan,sumatran)'U(2,0.025)'),gibbon)'U(3,0.025)'; #>                 #> 1 //end of file #>  #> $parameters #>         tU    pR #> node_1 3.0 0.025 #> node_2 1.2 0.025 #> node_3 1.2 0.025 #> node_4 2.0 0.025 #>  #> $nodeLabels #> [1] \"'U[3~0.025]'\"   \"'U[1.2~0.025]'\" \"'U[1.2~0.025]'\" \"'U[2~0.025]'\"   #>"},{"path":"/reference/mcmc.tree.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot time-scaled phylogenies — MCMC.tree.plot","title":"Plot time-scaled phylogenies — MCMC.tree.plot","text":"Plot time-scaled phylogenies node uncertainty timescale","code":""},{"path":"/reference/mcmc.tree.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot time-scaled phylogenies — MCMC.tree.plot","text":"","code":"MCMC.tree.plot(   phy = NULL,   analysis.type = \"MCMCtree\",   MCMC.chain = NULL,   node.ages = NULL,   directory.files = NULL,   plot.type = \"phylogram\",   build.tree = FALSE,   node.method = \"bar\",   all.nodes = NULL,   add.time.scale = TRUE,   add.abs.time = TRUE,   scale.res = \"Epoch\",   label.timescale.names = FALSE,   time.correction = 1,   col.age = \"blue\",   tip.lengths = FALSE,   density.col = \"#00000050\",   density.border.col = \"#00000080\",   cex.tips = 1,   show.tip.label = TRUE,   col.tree = \"black\",   tip.color = \"black\",   lwd.bar = 1,   grey.bars = TRUE,   cex.age = 1,   cex.labels = 1,   cex.names = 1,   relative.height = 0.08,   tip.bar.col = \"#ff000050\",   burn.in = 0.25,   distribution.height = 0.8,   abs.age.mgp = c(3, 0.35, 0),   abs.age.lwd.ticks = 0.7,   abs.age.lwd = 0,   tck.abs.age = -0.01,   abs.age.line = -0.4,   pos.age = NULL,   n.runs = 2,   ladderize.tree = TRUE,   ... )"},{"path":"/reference/mcmc.tree.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot time-scaled phylogenies — MCMC.tree.plot","text":"phy timescaled phylogeny, unless analysis.type=\"MCMCtree\" build.tree=TRUE analysis.type method used generate time-scale tree, one MCMCtree, MrBayes, RevBayes, BEAST2, User. MCMC.chain full posterior age estimates nodes (default NULL) node.ages List user-supplied node ages applicable analysis.type user. Either nodes selection nodes. list element must named corresponding node label APE format. directory.files directory files summarise MrBayes, RevBayes, BEAST2 analyses plot.type plotting method phylogram corresponding APE definition. Phylogram available analysis types, cladogram avilable MCMCtree analyses present. Type distributions plots phylogram stats::density distributions nodes. build.tree Logical. applicable MCMCtree analyses, whether timescale phylogeny based full MCMC chain node.method plot.type phylogram method dispay age uncertainty node, either bar, node.length, full.length. 'none' supplied plotting node uncertainty suppressed. .nodes NULL (default) node uncertainty plotted nodes. node numbers supplied, nodes labelled uncertainty. add.time.scale Logical. Adds timescale plotted phylogeny. add.abs.time Logical. Adds absolute timescale alongside geological timescale. applicable add.time.scale TRUE scale.res geological age designation add plot can one combination Eon, Period, Epoch, Age. order plot (bottom top) supplied order. Subsequent arguments add.abs.time grey.bars based last supplied age designation. label.timescale.names Logical. Add names (Eon, Period, Epoch, Age, Ma) axis timescale used time.correction Number place branch lengths age estimates absolute time, deafult one. col.age colouring node.method bars summarise node age uncertainty tip.lengths Logical. tree contains non-present tip ages, age uncertainty associated added plot density.col Colour node distributions (analysis.type=distributions) density.border.col Colour node distributions (analysis.type=distributions) borders cex.tips Size phylogeny tip labels show.tip.label Logical. tree tip labels displayed col.tree Colour phylogeny edges tip.color Colour phylogeny tip labels lwd.bar Width bar summarise age uncertainty, applicable plot.type phylogram node.method bar grey.bars Logical. grey bars used signify time bins, applicable add.time.scale TRUE cex.age Size labels absolute timescale cex.labels Size labels geological timescale cex.names Logical. Add label.timescale.names, applicable. relative.height relative height timescale labels tip.bar.col colour uncertainty around non-contemporary tips burn.number points chain discard MrBayes RevBayes analyses distribution.height relative height node distributions plot.type distributions measured relative height descendent node abs.age.mgp mgp values absolute age axis, applicable add.abs.time TRUE abs.age.lwd.ticks lwd values absolute age axis ticks, applicable add.abs.time TRUE abs.age.lwd lwd values absolute age axis horizontal line, applicable add.abs.time TRUE tck.abs.age tck values absolute age axis tick height, applicable add.abs.time TRUE abs.age.line line correction absolute age axis tick, applicable add.abs.time TRUE pos.age position position absolute age axis n.runs analysis.type mrbayes, number independent chains summarise ladderize.tree Logical. Plot ladderized tree (TRUE) (FALSE) ... arguments used plot.phylo","code":""},{"path":"/reference/mcmc.tree.plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot time-scaled phylogenies — MCMC.tree.plot","text":"plot=TRUE plot distributions file 'pdfOutput' written current working directory","code":""},{"path":"/reference/mcmc.tree.plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot time-scaled phylogenies — MCMC.tree.plot","text":"primary inputs 'method' options outputs analysis conducting using MCMCtree, MrBayes, RevBayes, User. analyses 'MCMCtree' option (default) function requires 'FigTree' output MCMCtree analysis full MCMCtree posterior. option \"MrBayes\" \"RevBayes\", method argument takes user-supplied directory address output files stored. option 'User' function requires full posterior distribution time-scaled phylogeny. function can take posterior distribution, may require manipulation. argument node.ages MCMC.tree.plot takes named list containing posterior ages node, name element corresponding node phylogeny.","code":""},{"path":"/reference/mcmc.tree.plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot time-scaled phylogenies — MCMC.tree.plot","text":"Mark Puttick","code":""},{"path":"/reference/mcmc.tree.plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot time-scaled phylogenies — MCMC.tree.plot","text":"","code":"data(MCMCtree.output) #> Warning: data set ‘MCMCtree.output’ not found attach(MCMCtree.output) ## if it is necessary to read in file manually ## MCMCtree.posterior <- read.csv(\"mcmc.posterior.file.directory\", sep=\"\\t\") MCMCtree.file <- readMCMCtree(MCMCtree.phy, from.file=FALSE)$apePhy MCMC.tree.plot(phy=MCMCtree.file,  analysis.type=\"MCMCtree\", MCMC.chain=MCMCtree.posterior, plot.type=\"distributions\", cex.tips=0.5, time.correction=100)"},{"path":"/reference/mcmcTreePhy.html","id":null,"dir":"Reference","previous_headings":"","what":"MCMCtreePhy — MCMCtreePhy","title":"MCMCtreePhy — MCMCtreePhy","text":"Wrapper function estimate node distributions add tree output MCMCtree format phylogeny file. parameter values vectors shorter number nodes recycled.","code":""},{"path":"/reference/mcmcTreePhy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MCMCtreePhy — MCMCtreePhy","text":"","code":"MCMCtreePhy(   phy,   minAges,   maxAges,   monoGroups,   method = c(\"cauchy\", \"upper\", \"bound\", \"gamma\", \"skewNormal\", \"skewT\", \"fixed\"),   offset = 0.1,   df = 1,   shape = 50,   scale = 1.5,   minProb = 1e-08,   addMode = 0,   maxProb = 0.975,   rightTail = 0.025,   alpha = 188,   beta = 100,   estimateScale = TRUE,   estimateShape = FALSE,   estimateMode = FALSE,   estimateAlpha = TRUE,   estimateBeta = FALSE,   plot = FALSE,   pdfOutput = \"nodeDistributions.pdf\",   writeMCMCtree = TRUE,   MCMCtreeName = \"output.tre\" )"},{"path":"/reference/mcmcTreePhy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MCMCtreePhy — MCMCtreePhy","text":"phy fully resolved phylogeny ape format minAges vector minimum age bounds nodes matching order monoGroups maxAges vector maximum age bounds nodes matching order monoGroups monoGroups list  element containing species define node interest method vector type calibration distribution node offset offset value distribution (default = 50) df degrees freedom skew-t distribution (default = 1) shape shape value skew-t distribution (default = 50) scale scale value distribution (default = 1.5) minProb probability left tail (minimum bound) - default hard minimum (minProb=0) addMode addition minimum age give location distribution maxProb probability right tail (maximum bound. default = 0.975) rightTail probability right tail (maximum bound default = 0.025) alpha alpha value gamma distribution (default = 188) beta beta value gamma distribution (default = 2690) estimateScale logical specifying whether estimate scale given shape value (default = TRUE) estimateShape logical specifying whether estimate shape given scale value estimateMode logical speciftying whether estimate scale produces probabilities tail corresponds roughly values given minProb (lower tail) maxProb (upper tail) estimateAlpha logical specifying whether estimate alpha given beta value (default = TRUE) estimateBeta logical specifying whether estimate beta given alpha value (default = FALSE) plot logical specifying whether plot PDF pdfOutput pdf output file name writeMCMCtree logical whether write tree format compatible MCMCTree file MCMCtreeName MCMCtree.output file name","code":""},{"path":"/reference/mcmcTreePhy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MCMCtreePhy — MCMCtreePhy","text":"list containing node estimates distribution \"parameters\" estimated parameters node \"apePhy\" phylogeny APE format node labels showing node distributions \"MCMCtree\" phylogeny MCMCtree format \"nodeLabels\" node labels MCMCtreeR format plot=TRUE plot distributions file 'pdfOutput' written current working directory writeMCMCtree=TRUE tree MCMCtree format file \"MCMCtreeName\" written current working directory","code":""},{"path":"/reference/mcmcTreePhy.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MCMCtreePhy — MCMCtreePhy","text":"Mark Puttick","code":""},{"path":"/reference/mcmcTreePhy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MCMCtreePhy — MCMCtreePhy","text":"","code":"data(apeData) attach(apeData) #> The following objects are masked from apeData (pos = 4): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups #> The following objects are masked from apeData (pos = 5): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups #> The following objects are masked from apeData (pos = 6): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups #> The following objects are masked from apeData (pos = 7): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups #> The following objects are masked from apeData (pos = 8): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups #> The following objects are masked from apeData (pos = 9): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups #> The following objects are masked from apeData (pos = 10): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups ## extract taxon descending from calibrated nodes 8, 10, 11, 13 ## these nodes can be visualised using plot.phylo ## and nodelabels from ape monophyleticGroups <- tipDes(apeData$apeTree, c(8,10,11,13)) minimumTimes <- c(\"nodeOne\"=15, \"nodeTwo\"=6, \"nodeThree\"=8, \"nodeFour\"=13) / 10 maximumTimes <- c(\"nodeOne\" = 30, \"nodeTwo\" = 12, \"nodeThree\"=12, \"nodeFour\" = 20) / 10 # Cauchy, upper age, bound, and gamma applied individually to each node MCMCtreePhy(phy=apeTree, minAge=minimumTimes, maxAge=maximumTimes,  monoGroups=monophyleticGroups, plot=FALSE,  method=c(\"cauchy\", \"upper\", \"bound\", \"gamma\"), writeMCMCtree=FALSE) #> Warning: Length of node.label does not match number of nodes. #> Warning: Length of node.label does not match number of nodes. #> Warning: Length of node.label does not match number of nodes. #> Warning: Length of node.label does not match number of nodes. #> $node_1 #>         tL   p     c     pL #> node_1 1.5 0.1 0.085 1e-300 #>  #> $node_2 #>         tU    pR #> node_1 1.2 0.025 #>  #> $node_3 #>         tL  tU     pL    pU #> node_1 0.8 1.2 1e-300 0.025 #>  #> $node_4 #>        alpha beta #> node_1   140  100 #>"},{"path":"/reference/mcmctree.output.html","id":null,"dir":"Reference","previous_headings":"","what":"MCMCtree.output — MCMCtree.output","title":"MCMCtree.output — MCMCtree.output","text":"Phylogeny output MCMCtree, posterior estimates MCMCtree '' file re-analysis data Morris et al. 2018","code":""},{"path":"/reference/mcmctree.output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MCMCtree.output — MCMCtree.output","text":"","code":"data(MCMCtree.output)"},{"path":"/reference/mcmctree.output.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"MCMCtree.output — MCMCtree.output","text":"object class list length 2.","code":""},{"path":"/reference/mcmctree.output.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"MCMCtree.output — MCMCtree.output","text":"Morris et al. 2018","code":""},{"path":"/reference/mcmctree.output.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MCMCtree.output — MCMCtree.output","text":"","code":"data(MCMCtree.output) #> Warning: data set ‘MCMCtree.output’ not found attach(MCMCtree.output) #> The following objects are masked from MCMCtree.output (pos = 4): #>  #>     MCMCtree.phy, MCMCtree.posterior names(MCMCtree.output) #> [1] \"MCMCtree.phy\"       \"MCMCtree.posterior\""},{"path":"/reference/nodeToPhy.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Node Constraints to Tree in MCMCtree Format — nodeToPhy","title":"Add Node Constraints to Tree in MCMCtree Format — nodeToPhy","text":"Produce tree node labels MCMCtree format","code":""},{"path":"/reference/nodeToPhy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Node Constraints to Tree in MCMCtree Format — nodeToPhy","text":"","code":"nodeToPhy(phy, monoGroups, nodeCon, returnPhy = TRUE)"},{"path":"/reference/nodeToPhy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Node Constraints to Tree in MCMCtree Format — nodeToPhy","text":"phy fully resolved phylogeny ape format monoGroups list  element containing species define node interest nodeCon node distributions MCMCtreeR format returnPhy logical specifying whether return phy console write MCMCtree input (default = TRUE)","code":""},{"path":"/reference/nodeToPhy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Node Constraints to Tree in MCMCtree Format — nodeToPhy","text":"returnPhy=TRUE phylogeny node labels ape format returnPhy=FALSE phylogeny node labels MCMCtree format","code":""},{"path":"/reference/nodeToPhy.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add Node Constraints to Tree in MCMCtree Format — nodeToPhy","text":"Mark Puttick","code":""},{"path":"/reference/plotMCMCTree.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot distribution from MCMCtree node estimations — plotMCMCtree","title":"Plot distribution from MCMCtree node estimations — plotMCMCtree","text":"Estimate offset scale paramaters soft-tailed cauchy distribution output trees MCMCtree input","code":""},{"path":"/reference/plotMCMCTree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot distribution from MCMCtree node estimations — plotMCMCtree","text":"","code":"plotMCMCtree(   parameters,   method = c(\"skewT\", \"skewNormal\", \"cauchy\", \"gamma\", \"bound\"),   title,   upperTime,   lowerTime = 0,   plotMCMCtreeData = TRUE )"},{"path":"/reference/plotMCMCTree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot distribution from MCMCtree node estimations — plotMCMCtree","text":"parameters output parameters node estimation function method one skewT, skewNormal, cauchy, gamma, bound title title plot upperTime maxmimum age x-axis plot lowerTime maxmimum age x-axis plot (default = 0) plotMCMCtreeData TRUE returns co-ordinates plot distributions allow greater flexibility (default = TRUE)","code":""},{"path":"/reference/plotMCMCTree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot distribution from MCMCtree node estimations — plotMCMCtree","text":"plot specified prior applied node plotMCMCtreeData=TRUE x y coordinates distributions 0 upperTime x axis","code":""},{"path":"/reference/plotMCMCTree.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot distribution from MCMCtree node estimations — plotMCMCtree","text":"Mark Puttick","code":""},{"path":"/reference/plotMCMCTree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot distribution from MCMCtree node estimations — plotMCMCtree","text":"","code":"data(apeData) attach(apeData) #> The following objects are masked from apeData (pos = 4): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups #> The following objects are masked from apeData (pos = 6): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups #> The following objects are masked from apeData (pos = 7): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups #> The following objects are masked from apeData (pos = 8): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups #> The following objects are masked from apeData (pos = 9): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups #> The following objects are masked from apeData (pos = 10): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups #> The following objects are masked from apeData (pos = 11): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups #> The following objects are masked from apeData (pos = 12): #>  #>     apeTree, maximumTimes, minimumTimes, monophyleticGroups # create monophyletic groups descending from nodes 8, 10, 11, and 13 monophyleticGroups <- tipDes(apeData$apeTree, c(8,10,11,13)) minimumTimes <- c(\"nodeOne\"=15, \"nodeTwo\"=6, \"nodeThree\"=8, \"nodeFour\"=13) / 10 maximumTimes <- c(\"nodeOne\" = 30, \"nodeTwo\" = 12, \"nodeThree\"=12, \"nodeFour\" = 20) / 10 cauchy <- estimateCauchy(minAge=minimumTimes[1], maxAge=maximumTimes[1], monoGroups=monophyleticGroups[[1]], offset=0.5, phy=apeTree, plot=FALSE) #> Warning: Length of node.label does not match number of nodes. ## un-comment to run plotMCMCtree(parameters=cauchy$parameters, method=\"cauchy\", title=\"cauchyPlot\", upperTime=maximumTimes[1]+1)"},{"path":"/reference/priorPosterior.html","id":null,"dir":"Reference","previous_headings":"","what":"priorPosterior — priorPosterior","title":"priorPosterior — priorPosterior","text":"Analyse prior posterior node distributions MCMCtree analysis","code":""},{"path":"/reference/priorPosterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"priorPosterior — priorPosterior","text":"","code":"priorPosterior(   MCMCPrior,   MCMCPosterior = NULL,   inputTree,   return.density = FALSE,   rootCalibration = NULL )"},{"path":"/reference/priorPosterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"priorPosterior — priorPosterior","text":"MCMCPrior prior MCMC file MCMCtree analysis using data=0 MCMCPosterior posterior MCMC file MCMCtree analysis using data inputTree phylogeny MCMCtree format used MCMCtree analysis return.density Logical. Whether return density original values effective prior posterior. rootCalibration = NULL NULL, behaves default. Alternatively, user specified root prior MCMCtreeR control file can added vector form appear tree.","code":""},{"path":"/reference/priorPosterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"priorPosterior — priorPosterior","text":"list containing node estimates distribution \"prior\" distribution effective prior \"posterior\" distribution posterior \"specifiedPrior\" distribution specified prior","code":""},{"path":"/reference/priorPosterior.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"priorPosterior — priorPosterior","text":"Mark Puttick, Pascal Title","code":""},{"path":"/reference/priorPosterior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"priorPosterior — priorPosterior","text":"","code":"data(MCMCtree.output) #> Warning: data set ‘MCMCtree.output’ not found # priorPosterior(MCMCPrior,  # MCMCPosterior=MCMCtree.output$MCMCtree.posterior,  # path.to.input.tree)"},{"path":"/reference/readMCMCTree.html","id":null,"dir":"Reference","previous_headings":"","what":"Read MCMCtree output tree into R — readMCMCtree","title":"Read MCMCtree output tree into R — readMCMCtree","text":"Read MCMCtree output tree R produce time-scaled tree APE format, table mean 95","code":""},{"path":"/reference/readMCMCTree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read MCMCtree output tree into R — readMCMCtree","text":"","code":"readMCMCtree(inputPhy, forceUltrametric = TRUE, from.file = TRUE)"},{"path":"/reference/readMCMCTree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read MCMCtree output tree into R — readMCMCtree","text":"inputPhy file directory 'Figtree' output MCMCtree forceUltrametric alters branch lengths tips tree fully ultrametric (default = TRUE) .file Logical. Read tree file locally within R?","code":""},{"path":"/reference/readMCMCTree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read MCMCtree output tree into R — readMCMCtree","text":"apePhy time-scaled output tree MCMCtree APE format nodeAges mean 95","code":""},{"path":"/reference/readMCMCTree.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read MCMCtree output tree into R — readMCMCtree","text":"Mark Puttick","code":""},{"path":"/reference/readMCMCTree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read MCMCtree output tree into R — readMCMCtree","text":"","code":"data(MCMCtree.output) #> Warning: data set ‘MCMCtree.output’ not found attach(MCMCtree.output) #> The following objects are masked from MCMCtree.output (pos = 4): #>  #>     MCMCtree.phy, MCMCtree.posterior #> The following objects are masked from MCMCtree.output (pos = 6): #>  #>     MCMCtree.phy, MCMCtree.posterior # tree and node ages readMCMCtree(MCMCtree.phy, from.file=FALSE) #> $apePhy #>  #> Phylogenetic tree with 103 tips and 102 internal nodes. #>  #> Tip labels: #>   Dioscorea_villosa, Colchicum_autumnale, Smilax_bona-nox, Sorghum_bicolor, Zea_mays, Oryza_sativa, ... #>  #> Rooted; includes branch lengths. #>  #> $nodeAges #>         mean 95%_lower 95%_upper #> 104 7.767503     6.651     9.296 #> 105 7.306332     6.337     8.634 #> 106 6.644847     5.906     7.652 #> 107 6.228787     5.607     7.012 #> 108 5.944306     5.403     6.633 #> 109 5.554283     5.118     6.145 #> 110 5.001146     4.766     5.149 #> 111 4.466497     4.367     4.509 #> 112 4.272271     4.131     4.405 #> 113 3.515712     3.311     3.651 #> 114 2.329351     2.068     2.467 #> 115 2.114190     1.853     2.341 #> 116 1.913382     1.671     2.174 #> 117 1.661844     1.474     1.893 #> 118 1.242075     1.151     1.285 #> 119 1.048606     0.926     1.175 #> 120 0.959314     0.847     1.091 #> 121 0.680444     0.365     0.913 #> 122 0.895020     0.767     1.029 #> 123 0.783066     0.624     0.930 #> 124 0.481127     0.319     0.653 #> 125 0.208725     0.090     0.386 #> 126 0.348893     0.194     0.536 #> 127 1.544019     1.390     1.759 #> 128 1.423139     1.282     1.642 #> 129 1.311295     1.190     1.538 #> 130 1.182058     1.109     1.388 #> 131 0.761427     0.513     1.050 #> 132 1.261988     1.210     1.286 #> 133 1.152143     1.047     1.226 #> 134 1.069097     0.949     1.168 #> 135 0.965804     0.834     1.089 #> 136 0.861304     0.698     1.001 #> 137 0.756563     0.556     0.920 #> 138 0.576249     0.352     0.782 #> 139 0.866342     0.689     1.005 #> 140 0.736447     0.503     0.913 #> 141 1.070807     0.943     1.170 #> 142 0.972898     0.837     1.089 #> 143 0.886580     0.741     1.015 #> 144 0.760147     0.583     0.908 #> 145 0.666530     0.483     0.834 #> 146 0.362568     0.186     0.573 #> 147 0.455096     0.229     0.727 #> 148 1.014444     0.782     1.180 #> 149 0.783065     0.472     1.019 #> 150 3.177954     3.084     3.372 #> 151 2.886741     2.660     3.182 #> 152 0.952532     0.426     1.932 #> 153 0.209907     0.067     0.511 #> 154 2.438058     1.701     3.048 #> 155 2.114159     1.425     2.791 #> 156 0.630082     0.186     1.268 #> 157 1.252099     0.835     1.883 #> 158 0.893094     0.507     1.322 #> 159 1.139416     0.794     1.627 #> 160 0.952772     0.631     1.329 #> 161 0.684231     0.364     1.029 #> 162 0.346178     0.135     0.684 #> 163 4.042667     3.923     4.196 #> 164 3.572424     3.215     3.938 #> 165 2.694457     1.069     3.563 #> 166 3.906610     3.848     4.040 #> 167 1.157836     0.498     2.476 #> 168 4.089600     3.927     4.322 #> 169 1.262264     0.751     2.345 #> 170 0.880515     0.427     1.586 #> 171 0.118091     0.041     0.278 #> 172 4.870626     4.632     5.065 #> 173 4.671717     4.397     4.916 #> 174 3.997939     3.494     4.493 #> 175 3.397905     2.994     3.957 #> 176 2.823961     2.685     3.177 #> 177 1.778637     0.972     2.746 #> 178 1.043410     0.699     1.538 #> 179 0.864497     0.545     1.262 #> 180 0.290700     0.161     0.498 #> 181 0.224755     0.098     0.429 #> 182 0.228450     0.104     0.426 #> 183 0.323686     0.126     0.642 #> 184 4.184525     4.053     4.461 #> 185 2.726547     2.283     3.621 #> 186 1.227128     0.707     2.209 #> 187 0.794258     0.332     1.346 #> 188 2.439996     0.792     3.922 #> 189 0.164268     0.053     0.382 #> 190 4.971913     4.089     5.802 #> 191 4.515646     3.554     5.409 #> 192 4.064539     2.936     5.021 #> 193 3.347874     2.004     4.445 #> 194 2.066850     0.860     3.533 #> 195 4.470035     3.452     5.384 #> 196 3.595206     2.097     4.690 #> 197 3.075275     1.413     4.250 #> 198 4.738018     3.116     6.056 #> 199 3.176621     1.125     4.842 #> 200 4.686395     2.547     6.542 #> 201 5.884835     3.952     7.700 #> 202 4.184454     2.113     6.224 #> 203 6.680455     5.025     8.412 #> 204 5.843148     4.500     7.406 #> 205 4.869119     3.227     6.683 #>  #> attr(,\"class\") #> [1] \"MCMCtreer\""},{"path":"/reference/tipDes.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Descendent Tips From A Common Ancestor — tipDes","title":"Find Descendent Tips From A Common Ancestor — tipDes","text":"function finds tip descendants common ancestor","code":""},{"path":"/reference/tipDes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Descendent Tips From A Common Ancestor — tipDes","text":"","code":"tipDes(phy, node)"},{"path":"/reference/tipDes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Descendent Tips From A Common Ancestor — tipDes","text":"phy user tree ape format node one nodes ape format designate crown monophyletic group","code":""},{"path":"/reference/tipDes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find Descendent Tips From A Common Ancestor — tipDes","text":"single node number supplied function returns vector tip labels. one node number supplied function returns list element vector tip labels node.","code":""},{"path":"/reference/tipDes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find Descendent Tips From A Common Ancestor — tipDes","text":"Mark Puttick","code":""},{"path":"/reference/tipDes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Descendent Tips From A Common Ancestor — tipDes","text":"","code":"set.seed(1029) # one node phy <- rcoal(10) node <- 13 tipDes(phy, node) #> [1] \"t3\"  \"t7\"  \"t6\"  \"t1\"  \"t9\"  \"t10\" \"t8\"  ## multiple nodes node <- c(13,14,15) tipDes(phy, node) #> $`13` #> [1] \"t3\"  \"t7\"  \"t6\"  \"t1\"  \"t9\"  \"t10\" \"t8\"  #>  #> $`14` #> [1] \"t3\"  \"t6\"  \"t10\" \"t8\"  #>  #> $`15` #> [1] \"t7\" \"t1\" \"t9\" #>"}]
